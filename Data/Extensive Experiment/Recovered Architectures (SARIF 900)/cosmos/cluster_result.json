{
    "@schemaVersion": "1.0",
    "name": "clustering",
    "structure": [
        {
            "@type": "group",
            "name": "0",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/automorphic_numbers/automorphic_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_scheduling.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tower_of_hanoi/tower_of_hanoi.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_digits/count_digits.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/catalan_number/catalan_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/P-BATTLE/PBATTLE.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/log_of_factorial/log_of_factorial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/smallest_digit_in_number/smallest_digit_in_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/delannoy_number/delannoy_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/Binary_GCD_Algorithm/Binary_GCD_Recursive.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/factorial/factorial_recursion.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_number_recursion.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lucky_number/lucky_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tower_of_hanoi/tower_of_hanoi.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/greatest_digit_in_number/greatest_digit_in_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/shuffle_array/shuffle_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/factorial/factorial.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/divided_differences/divided_differences.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/armstrong_numbers/armstrong_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/log_of_factorial/log_of_factorial.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/replace_0_with_5/replace_0_with_5.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fast_fourier_transform/fast_fourier_transform.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/factorial/factorial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/amicable_numbers/amicable_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_digits/count_digits.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/shortest_seek_time_first/shortest_seek_time_first.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_trailing_zeroes/count_trailing_zeroes.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/coprime_numbers/coprime_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sum_of_digits/sum_of_digits_with_recursion.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gcd_and_lcm/gcd_and_lcm.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_factorial/reverse_factorial.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_trailing_zeroes/count_trailing_zeroes_factorial.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_020/problem_020.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/first_come_first_serve/fcfs.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/replace_0_with_5/replace_0_with_5.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/pandigital_number/pandigital_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tribonacci_numbers/tribonacci_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/log_of_factorial/log_of_factorial.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_by_squaring/exponentiation_by_squaring.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/2sum/2sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_power.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_digits/count_digits.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tribonacci_numbers/tribonnaci.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fermats_little_theorem/fermats_little_theorem.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/armstrong_numbers/armstrong_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/memory_mapping/mapping.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/reverse_word_string/reverse_word_string.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/Binary_GCD_Algorithm/Binary_GCD_Iterative.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_number_iterative.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/average/average.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tribonacci_numbers/tribonacci_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/smallest_digit_in_number/smallest_digit_in_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/coin_change/coinchange.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/euler_totient/euler_totient.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/z_algorithm/z_algorithm_z_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newton_raphson_method/newton_raphson.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/multiply_polynomial/multiply_polynomial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/factorial/factorial_iteration.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fibonacci_matrix_exponentiation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/automorphic_numbers/automorphic_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gcd_and_lcm/gcd_and_lcm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/replace_0_with_5/0_to_5_efficent.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/rock_paper_scissor/rock_game.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/amicable_numbers/amicable_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tower_of_hanoi/tower_of_hanoi.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_a_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gcd_and_lcm/gcd_and_lcm.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newton_raphson_method/newton_raphson.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/double_to_string/double_to_str.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/catalan_number/catalan_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/automorphic_numbers/automorphic_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/smallest_digit_in_number/smallest_digit_in_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/factorial/factorial.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/coprime_numbers/coprime_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/factorial/factorial_recursion.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lucky_number/lucky_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/erode_dilate/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/delannoy_number/delannoy_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/armstrong_numbers/armstrong_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/binomial_coefficient/binomial_coefficient.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/greatest_digit_in_number/greatest_digit_in_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_factors/prime_factors.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_eratosthenes/sieve_of_eratosthenes_linear.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/average_stream_numbers/average_stream_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/euler_totient/euler_totient_sieve.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/next_larger_number/next_larger_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/replace_0_with_5/replace_0_with_5.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/armstrong_num_range/amstrong_num_range.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/min_lateness/min_lateness.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/horner_polynomial_evaluation/horner_polynomial_evaluation.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/greatest_digit_in_number/greatest_digit_in_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/horner_polynomial_evaluation/horner_polynomial_evaluation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/next_larger_number/next_larger_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/convolution/convolution.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_factorial/reverse_factorial.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/catalan_number/catalan_number_recursive.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_034/problem_034.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/reverse_number/reverse_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/shortest_job_first/sjf.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/derangements/derangements.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/check_is_square/check_is_square.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sum_of_digits/sum_of_digits.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fast_fourier_transform/fast_fourier_transform.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/2sum/2sum.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gcd_and_lcm/gcd_and_lcm_best_approach.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sum_of_digits/sum_of_digits.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/catalan_number/catalan_number_dynamic.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/anagram_search/anagram_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sum_of_digits/sum_of_digits.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/autobiographical_numbers/autobiographical_numbers.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "1",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/sorting/src/insertion_sort/insertion_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/merge_sort/merge_sort_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/2d-array.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/radix_sort/radix_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/radix_sort/radix_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bucket_sort/bucket_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/thrice_unique_number/thrice_unique_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/sleep_sort/sleep_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/merge_sort_using_divide_and_conquer/merge_sort_using_divide_and_conquer.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/move_zeroes_to_end/move_zeroes_to_end.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/postmans_sort/postmans_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/cocktail_sort/cocktail_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/cycle_sort/cycle_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/selection_sort/selection_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/comb_sort/comb_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/topological_sort/topological_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/counting_sort/counting_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/insertion_sort/insertion_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/intro_sort/intro_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shell_sort/shell_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/heap_sort/heap_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shell_sort/shell_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shell_sort/shell_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/pigeonhole_sort/pigeonhole_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/spiral_matrix/spiral_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/tsp/salesman.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/sum_numbers_string/sum_numbers_string.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/unique_number/unique_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/merge_sort/merge_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/comb_sort/comb_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/flash_sort/flash_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/merge_arrays/merge_arrays.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/insertion_sort/insertion_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/set_ith_bit/set_ith_bit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/segregate_even_odd/segregate_even_odd.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/topological_sort/topological_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/pigeonhole_sort/pigeonhole_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/begin_and_end/begin_and_end.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/heap_sort/heap_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fibonacci_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/quick_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/slow_sort/slow_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/quick_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/min_operation_to_make_gcd_k/min_operation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/slow_sort/slow_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/circle_sort/circle_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/maximum_perimeter_triangle/PerimeterTriangle.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/stooge_sort/stooge_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/tree_sort/tree_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/merge_sort_using_divide_and_conquer/inversions.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/median_sort/median_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bucket_sort/bucket_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bogo_sort/bogo_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shaker_sort/shaker_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/comb_sort/comb_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/median_of_two_sorted_arrays/median_of_two_sorted_arrays.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/gnome_sort/gnome_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/unique_paths/unique_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/bubble_sort/bubble_sort_implementation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/average_stream_numbers/average_stream_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/add_one_to_number/add_one_to_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/heap_sort/heap_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/dutch_national_flag.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_002/problem_002.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bogo_sort/bogo_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/shuffle_array/shuffle_array.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/cocktail_sort/cocktail_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/cycle_sort/cycle_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort_efficient.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/dynamic_array/dynamic_array.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/stooge_sort/stooge_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/2d-array-list-java.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/counting_sort/counting_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/the_maximum_subarray/the_maximum_subarray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bucket_sort/bucket_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/sleep_sort/sleep_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/magic_square/magic_square.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/stooge_sort/stooge_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shaker_sort/shaker_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/circle_sort/circle_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/pigeonhole_sort/pigeonhole_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fibonacci_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/counting_sort/counting_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/merge_sort_using_divide_and_conquer/merge_sort_using_divide_and_conquer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bucket_sort/bucket_sorting.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/cycle_sort/cycle_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/merge_sort/merge_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/hierachical_clustering/hierachical_clustering.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/selection_sort/selection_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/unique_number/unique_num_stl.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/optimized_fibonacci/optimized_fibonacci.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/k_means/k_means.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/gnome_sort/gnome_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/quick_sort_three_way.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/gnome_sort/gnome_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/shaker_sort/shaker_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/unique_number/unique_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort_recursive.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/median_sort/median_sort_fast.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/circle_sort/circle_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_002/problem_002.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/radix_sort/radix_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/pancake_sort/pancake_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bogo_sort/bogo_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/sleep_sort/sleep_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/suffix_array/suffix_array.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "2",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/Longest_common_subsequence/longest_common_subsequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/linked_list_palindrome.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/factorial/factorial.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_bitonic_sequence/longest_bitonic_sequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/subset_sum/subset_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/factorial/factorial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/activity_selection/activity_selection.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/subset_sum/subset_sum.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/coin_change/coin_change.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/boolean_parenthesization/boolean_parenthesization.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_palindromic_sequence/longest_palindromic_sequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_repeating_subsequence/longest_repeating_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/palindrome_partition/palindrome_partition.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/edit_distance/edit_distance.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/test/subset_sum/test_subset_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/rod_cutting/rod_cutting.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/test/palindrome/palindrome_check/test_palindrome_check.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/array_median/array_median.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/manachar_algorithm/manachar_longest_palindromic_subs.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/palindrome_checker/palindrome.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fast_fibonacci.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/edit_distance/edit_distance.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/subset_sum/subset_sum.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_sum_sub_matrix/maximum_sum_sub_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/axis_aligned_bounding_box_collision/axis_aligned_bounding_box_collision.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/palindrome/palindrome_check/palindrome_check.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/weighted_job_scheduling/weighted_job_scheduling.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/fibonacci/fibonacci.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/fibonacci/fibonacci.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_sum_sub_matrix/maximum_sum_sub_matrix.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/travelling_salesman_mst/travelling_salesman.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/edit_distance/edit_distance_backtracking.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/palindrome_checker/palindrome.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/largest_sum_contiguous_subarray/largest_sum_contiguous_subarray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/largest_sum_contiguous_subarray/largest_sum_contiguous_subarray.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_substring/Longest_Common_Substring.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/postmans_sort/postmans_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/factorial/factorial.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/edit_distance/edit_distance.java"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/maximum_contiguous_subsequence_sum/maximum_contiguous_subsequence_sum.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/no_consec_ones/no_consec_1.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_increasing_subsequence/longest_increasing_subsequence_using_segment_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/shortest_common_supersequence/shortest_common_supersequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/coin_change/mincoinchange.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_bitonic_sequence/longestbitonicseq.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_increasing_subsequence/longest_increasing_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_palindromic_substring/longest_palindromic_substring.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/job_sequencing/job_sequencing.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/palindrome/palindrome_check/palindrome_check.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/warshall/warshalls.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/push_relabel/push_relabel.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/knapsack/knapsack.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/palindrome_substring/palindrome_substring.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/activity_selection/activity_selection.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_subsequence/longest_common_subsequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_subsequence/longest_common_subsequence.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/test/longest_repeating_subsequence/longest_repeating_subsequence_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/subset_sum/subset_sum.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_sum_increasing_subsequence/maximum_sum_increasing_subsequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_036/problem_036.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/tiling_problem/tiling_problem.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/minimum_insertion_palindrome/minimum_insertions_palindrome_using_lcs.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/subset_sum/subset_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_increasing_subsequence/longest_common_increasing_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/coin_change/coinchange.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/longest_palindromic_substring/longest_palindromic_substring.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/boolean_parenthesization/boolean_parenthesization.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/anagram_search/anagram_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_subsequence/longest_common_subsequence_rec.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/maximum_subarray_sum/maximum_subarray_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/segment_tree/test_generic_segment_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/palindrome/palindrome_check/palindrome_check.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/travelling_salesman_mst/travelling_salesman.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_palindromic_sequence/longest_palindromic_sequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/array_median/array_median.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/boolean_parenthesization/boolean_parenthesization.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/primality_tests/fermat_primality_test/fermat_primality_test.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/minimum_coins/minimumcoins.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/biggest_suffix/biggest_suffix.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_sum_increasing_subsequence/maximum_sum_increasing_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_increasing_subsequence/longest_increasing_subsequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_substring/longest_common_substring_2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/fibonacci/fibonacci.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/edit_distance/edit_distance_hirschberg.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/minimum_coins/minimum_coins.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_bitonic_sequence/longestbitonicsequence.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_subarray_sum/maximum_subarray_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_increasing_subsequence/longest_increasing_subsequence.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/palindrome_checker/palindrome.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/shortest_common_supersequence/scs.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/knapsack/knapsack.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/tsp.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_substring/Longest_Common_Substring_rename.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/permutations_of_string/permutations_of_string.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/test/push_relabel/test_push_relabel.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/activity_selection/activity_selection.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/longest_substring_without_repetition/longest_substring_without_repetition.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_subsequence/longest_common_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/number_of_substring_divisible_by_8_but_not_3/number_of_substrings.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "3",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/bit_division/bit_division.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/twice_unique_number/twice_unique_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/hamming_distance/hamming_distance.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/convert_number_binary/convert_number_binary.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/paint_fill/paint_fill.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/Find the element that appears once/Find_the_element_that_appears_once.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_trapezoid.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/flip_bits/flipbits.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/magic_number/magic_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/Strassens algorithm/strassens algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/count_set_bits/count_set_bits_lookup_table.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/sum_equals_xor/sum_equals_xor.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/flip_bits/flippingbits.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/integer_conversion/decimal_to_oct.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/josephus_problem/josephus.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/bit_division/bit_division.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/convert_number_binary/convert_number_binary.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/sum_binary_numbers/sum_binary_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/pangram_checker/pangram.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/count_set_bits/count_set_bits.java"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/randomized_quick_sort/randomized_quicksort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/egyptian_fraction/egyptian_fraction.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/count_set_bits/count_set_bits.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/shuffle_an_array/shuffle_an_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/pangram_checker/pangram_checker.c"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/test/baconian_cipher/baconian_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/lipogram_checker/lipogram_checker.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/flip_bits/flippingbits.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/first_come_first_serve/fcfs.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rail_fence_cipher/rail_fence_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/sum_binary_numbers/sum_binary_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/subset_generation/subset_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tridiagonal_matrix/tridiagonal_matrix.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/hamming_distance/hamming_distance.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_019/problem_019.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/count_set_bits/count_set_bits.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/largest-element-in-an-array/Largest_element.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/lonely_integer/lonely_integer.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/deadlocks/bankers_algorithm/banker_safety.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/clear_bits_from_msb/clear_bits_from_msb.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/invert_bit/invert_bit.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/anagram_search/anagram_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/average/average.c"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_rectangle.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/assembly_line_scheduling/assembly_line_scheduling.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/huffman_encoding/huffman_encoding.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/thrice_unique_number/thrice_unique_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/tokenizer/tokenizer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/pangram_checker/pangram.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/twice_unique_number/twice_unique_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/convert_number_binary/convert_number_binary.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/minimum_subarray_size_with_degree/minsubarraysizewithdegree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/first_set_bit/first_set_bit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/Counting_Valleys/Counting_Valleys.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/subset_generation/subset_mask_generator.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/lapindrom_checker/lapindrome_checker.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/linear_regression/linear_regression.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/monitors/monitors_system_v/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/hamiltonian_path/hamiltonian_path.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_trapezoid.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/hash_table/double_hashing.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/monitors/monitors_system_v/monitors.h"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/monitors/monitors_system_v/monitors.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/SplitArrayLargestSum/SplitArrayLargestSum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rot13_cipher/rot13_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/this_reference/this.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/biggest_of_n_numbers/biggest_of_n_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_trapezoid.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/remove_dups/remove_dups.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/remove_dups/remove_dups.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/Cichelli's Perfect Hashing Alogorithm/Hashing.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/josephus_problem/josephus.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/permutations_of_string/permutations_of_string_stl.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/lonely_integer/lonely_integer.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/subset_generation/subset_generator_using_bit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/Cichelli's Perfect Hashing Alogorithm/Key.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/priority_scheduling/priority_scheduling_preemptive.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/average/average.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/circular_linked_list/circular_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_rectangle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/elementary_cellular_automata/elementarycellularautomaton.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/invert_bit/invert_bit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/lonely_integer/lonely_integer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/b_tree/b_tree/b_tree_c/btree.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/b_tree/b_tree/b_tree_c/btree.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/magic_number/magic_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/String/StringClass.java"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/shuffle_an_array/shuffle_an_array.java"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/integral/src/integral_rectangle.java"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/k_means/k-means.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/hamming_distance/hamming_distance.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/b_tree/b_tree/b_tree_c/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/Find_Minimum_in_Rotated_Sorted_Array/FindMinimumInRotatedSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/numeric_keypad_problem/numeric_keypad_problem.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/magic_number/magic_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/count_set_bits/brian_kernighan_algo/brian_kernighan_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/priority_scheduling/priority_scheduling_non_preemptive.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/sum_equals_xor/sum_equals_xor.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/dynamic_memory_allocation/example.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "4",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/ford_fulkerson_maximum_flow/ford_fulkerson_maximum_flow.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/selection_algorithms/src/median_of_medians/median_of_medians.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/depth_first_search/depth_first_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/add_polynomials/add_polynomials.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/eulerian_path/eulerian_path.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/data_structures/adjacency_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/BRKBKS/Brkbks.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/data_structures/adjacency_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_checking/bipartite_checking.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/red_black_tree/red_black_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_directed_graph/cycle_directed_graph_detection.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_undirected_graph/cycle_undirected_graph.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cut_vertices/cut_vertices.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/interval_tree/interval_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_checking/bipartite_checking2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/kahn_algo_unique_toposort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/prim_minimum_spanning_tree/prim_minimum_spanning_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_002/problem_002.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tower_of_hanoi/tower_of_hanoi_iterative.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/tarjan_algorithm_strongly_connected_components/tarjan_algorithm_strongly_connected_components.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_checking/bipartite_checking.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/simpsons_rule/simpsons_rule.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bridges_in_graph/bridges.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_check/bipartite_check.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/runge_kutt/src/rk4.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort_adjacency_list2.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/kruskal_minimum_spanning_tree/kruskal_minimum_spanning_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/data_structures/adjacency_matrix_c/mgraph_struct.h"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/data_structures/adjacency_matrix_c/mgraph_struct.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/dinic_maximum_flow/dinic_maximum_flow.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/breadth_first_search/breadth_first_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/topological_sort/topological_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_undirected_graph/cycle_undirected_graph_check.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/kahn_algorithm_basic.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/soft_heap/soft_heap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_check/bipartite_check.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/ford_fulkerson_maximum_flow/ford_fulkerson_maximum_flow_using_bfs.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c/lgraph_struct.h"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c/lgraph_struct.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/boruvka_minimum_spanning_tree/boruvka_minimum_spanning_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/prim_minimum_spanning_tree/prim_minimum_spanning_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/breadth_first_search/breadth_first_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/graph_coloring/graph_coloring.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/graph_coloring/graph_coloring.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/negative_cycle_finding/negativeCycleFinding.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/centroid_decomposition/centroid_decomposition.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/median_two_sortedArrayOfDifferentLength/medianOfTwoSortedArrayOfDifferentLength.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/union_find/union_find.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/ford_fulkerson_maximum_flow/ford_fulkerson_maximum_flow_using_bfs.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/dials_algorithm/dials_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/depth_first_search/depth_first_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/Min_Max/aphabetapruning.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort_adjacency_matrix2.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/data_structures/adjacency_matrix_c/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/redundant-connection/redundant_connection.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/binary_search/distributing_candies/CandyDistribution.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_directed_graph/cycle_directed_graph.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort_adjacency_matrix.java"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/langtons_ant/langtons_ant.java"
                },
                {
                    "@type": "item",
                    "name": "code/square_root_decomposition/src/mos_algorithm/mos_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/runge_kutt/src/rk4.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/huffman_coding/huffman_coding.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/prim_minimum_spanning_tree/prim_minimum_spanning_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_directed_graph/cycle_directed_graph.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/cycle_undirected_graph/cycle_undirected_graph_union_find.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/strongly_connected_components/strongly_connected_components.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/kuhn_maximum_matching/kuhn_maximum_matching.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/detect_cycle_undirected_graph_using_degrees_of_nodes/detect_cycle_graph_using_degree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c/lgraph_stack.h"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_c/lgraph_stack.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/connected_components/connected_components.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/biconnected_components/biconnected_components.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/sutherland_hodgeman_clipping/sutherland_hodgeman_clipping.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/breadth_first_search/breadth_first_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/depth_first_search/depth_first_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bipartite_checking/bipartite_checking_adjacency_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/centroid_decomposition/centroid_decomposition.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/red_black_tree/red_black_tree.test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/bloom_filter/bloom_filter.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/topological_sort_adjacency_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/longest_path_directed_acyclic_graph/longest_path_directed_acyclic_graph.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "5",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/menu_interface/dlink.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/menu_interface/doubly_link.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/DoubleLinkedList/src_java/DoubleLinkedLists.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/delete/delete_node_without_head_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/nth_node_linked_list/nth_node_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/reverse/reverse.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/find/find.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/remove_duplicates_from_sorted_list_ii/remove_duplicates_from_sorted_list_ii.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/find/find.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/DoubleLinkedList/src_java/Node.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/circular_linked_list/circular_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/reversing_linkedlist.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/reverse_linked_list/reverse_linked_list_2pointers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/reverse/reverse_recursion.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/merge_sort/merge_sort_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/deleting_a_node.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/tree/trie/trie.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/circular_linked_list/operations/FloydAlgo_circular_ll.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/list/test_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/peterson_algorithm_for_mutual_exclusion/peterson_algorithm_in_c/peterson_algo_mutual_exclusion_in_c.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/menu_interface/link.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/menu_interface/singly_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/circular_buffer/circular_buffer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/unclassified/linked_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/add_two_numbers_represented_by_linked_lists.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/reverse/reverse_recursion2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/Reduce_Time_complexity.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/delete/delete_nth_node.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/kd_tree/kd_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/merge_two_sorted_lists/Merging_two_sorted.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/rotate/rotate.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/Count_nodes_of_Linked_List.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/hash_table/hash_table.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/CircularLinkedList/circularLinkedList.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/quick_sort/quick_sort2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/traverse_a_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/detect_cycle/detect_cycle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list_with_classes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/stack_using_linked_list/stack_using_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/doubly_linked_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/rotate_a_linked_list_by_k_nodes/rotate_a_linked_list_by_k_nodes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/tree/trie/trie.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/reverse/reverse_iteration.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/Add_one_to_LL.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/creating_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/unclassified/linked_list_operations.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/initializing_multimap/multimap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/linear_search/Search In Linked List.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/house_robber/HouseRobber.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/sort_a_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/producer_consumer/producer_consumer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/linear_search/linear_search_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/circular_linked_list/operations/is_circular_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/remove_duplicate_element_from_sorted_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/nth_node_linked_list/nth_node_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/linear_search/linear_search_duplicates_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/unclassified/union_intersection_in_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/xor_linked_list/xor_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/inserting_a_node.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/c/doubly_linked_list.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/c/doubly_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/trie_pattern_search/trie_pattern_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list_menu_driven.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list_with_3_nodes.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/pythagorean_triplet/pythagorean_triplet.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/sort/bubble_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/doubly_linked_list/doubly_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/reverse_linked_list/reverse_linked_list_3pointers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/circular_linked_list/circular_linked_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/number_of_dice_rolls_with_target_sum/NumberOfDiceRollsWithTargetSum.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/unclassified/linked_list_example.java"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/naive_bayes/naive_bayes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/linear_search/Linear Search In A LinkedList With Duplicates.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/DoubleLinkedList/src_java/DoubleLinkedListsMain.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/merge_sorted/merge_sorted.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/delete/delete_node_with_key.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/convert_to_doubly_linked_list/convert_to_doubly_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/reverse/reverse.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "6",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/is_binary_tree/is_binary_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/huffman_coding/huffman_GreedyAlgo.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/diameter/diameter.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/diameter/diameter.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/maximum_height/maximum_height2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/minimum_height/minimum_height.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/path_sum/path_sum.hpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_postorder/make_tree_from_inorder_and_postorder.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/interval_tree/interval_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/node/node.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/maximum_height/maximum_height.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_mirror_tree/make_mirror_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/inorder/right_threaded/right_threaded.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/Subtree_sum/subtreesum_recursive.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/tree_sort/tree_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/tree_sort/tree_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/binary_tree/binary_tree/diameter/test_diameter.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/symmetric_tree/symmetric_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/2d_array_ds/2d_array_ds.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/binary_tree/binary_tree/path_sum/test_path_sum_for_sum_of_part_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/is_balance/is_balance.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/processCreation/vfork.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/double_ended_queue/double_ended_queue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/postorder_from_inorder_and_preorder/postorder_from_inorder_and_preorder.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_preorder/make_tree_from_inorder_and_preorder.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/path_sum/sum_left/sum_left.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/splay_tree/splay_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/treap/treap.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/diameter/diameter.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/double_ended_queue/double_ended_queue.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/maximum_height/maximum_height.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/diameter/diameter2.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/binary_tree/binary_tree/path_sum/test_path_sum_for_whole_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_preorder/make_tree_from_inorder_and_preorder.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/splay_tree/splay_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/treap/treap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/avl_tree/avl_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/serializer/serializer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/right_view/right_view2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/hash_table/hash_table.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/avl_tree/avl_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/left_view_binary_tree/left_view_binary_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/left_view/left_view.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/avl_tree/avl_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/count_universal_subtree/count_universal_subtrees.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/range_sum_of_BST/range_sum_of_bst.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/path_sum/path_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/theory_of_computation/src/nondeterministic_finite_atomaton/nfa.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/zigzag/zigzag.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/is_same/is_same.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/balance_binary_tree/balance_bst_dsw.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/tree2.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/steiner_tree/steiner_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/segment_tree/generic_segment_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/left_view_binary_tree/left_view_binary_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_search_tree/BST_Operations.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_preorder/make_tree_from_inorder_and_preorder.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/minimum_height/minimum_height.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_postorder/make_tree_from_inorder_and_postorder.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/STFOOD/Stfood.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/minimum_height/minimum_height.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/binary_tree/binary_tree/path_sum/test_path_sum_for_sum_of_whole_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/binary_tree/binary_tree/is_same/test_is_same.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/priority_queue/leftist_tree/leftist_priority_queue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/diameter/diameter2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/right_view/right_view.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/make_mirror_tree/make_mirror_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/persistent_segment_tree_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/Number-of-Islands-using-DFS.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/genetic_algorithm/genetic_algorithm.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "7",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/hash_table/hash_table.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree_kth_statistics_on_segment.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/kth_grammar/kth-Grammar.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/aho_corasick_algorithm/aho_corasick_algorithm2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/jumping_on_the_clouds/Solution.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/cohen_sutherland_lineclip/cohen_sutherland_lineclip.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/number_of_ways_in_maze/number_of_ways_in_maze.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/transitive_closure_graph/transitive_closure_graph_powering_improved.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/number_of_ways_in_maze/number_of_ways_in_maze.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/Electronics_Shop/Electronics_Shop.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/matrix_row_reduction/matrix_row_reduction.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gaussian_elimination/gaussian_elimination.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/transitive_closure_graph/transitive_closure_graph_powering.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/fractional_knapsack/fractional_knapsack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CHEALG/CHEALG.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_008/problem_008.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/floyd_warshall_algorithm/floyd_warshall_algorithm.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/hill_climbing/hill_climbing.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/RESQ/RESQ.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/hillclimber/hillclimber.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/rat_in_a_maze/rat_in_a_maze.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/transitive_closure_graph/transitive_closure_graph.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/knight_tour/knight_tour.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/binomial_heap/binomial_heap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/min_cost_path/min_cost_path.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/largrange_polynomial/lagrange_polynomial.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/levenshtein_distance/levenshteindistance.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/kasai_algorithm/kasai_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/generate_parentheses/generate_parentheses.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bellman_ford_algorithm/bellman_ford_algorithm_edge_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/validate_ip/validate_ip.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/perfect_number/perfect_number.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/fractional_knapsack/fractional_knapsack.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/number_of_ways_in_maze/number_of_ways_in_maze.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bellman_ford_algorithm/bellman_ford_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/majority_element/majority_element_randomized.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/travelling_sales_man_dp/travelling_salesman_dp.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/Electronics_Shop/Electronics_Shop.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/leetcode/maximum_subarray/maximumsubarray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/aho_corasick_algorithm/aho_corasick_algorithm.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/spiral_matrix/spiral_matrix_clockwise_cycle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fractals/julia_miim.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/columnar_transposition_cipher/columnar_transposition_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/gauss_jacobi/src/Gauss Jacobi.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/hamiltonian_cycle/hamiltonian_cycle.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/floyd_warshall_algorithm/floyd_warshall_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path_gnu_fast.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/policy_based_design/policy_design.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/min_cost_path/min_cost_path.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/floyd_warshall_algorithm/floyd_warshall_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fractals/simple_julia.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/sudoku_solve/sudoku_solveNxN.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/gauss_seidal/src/Gauss Seidal.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/travelling_salesman_branch&bound/tsp_branch_bound.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/perfect_number/perfect_number_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/egyptian_fraction/egyptian_fraction.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bellman_ford_algorithm/bellman_ford_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/kuhn_munkres_algorithm/kuhn_munkres_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/binomial_heap/binomial_heap.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_010/problem_010.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/min_cost_path/min_cost_path.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bellman_ford_algorithm/bellman_ford_algorithm_adjacency_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/gaussian_elimination/gaussian_elimination.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_009/problem_009.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/add_polynomials/add_polynomials.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/transitive_closure_graph/transitive_closure_graph_floyd_warshall.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/aa_tree/aa_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/validate_ip/validate_ip.cc"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/SLAB/SLAB.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "8",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/2d_array/rotate2darray.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/BACREP/BACREP.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/vigenere_cipher/vigenere_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/baconian_cipher/baconian_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rot13_cipher/rot13_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/aes_128/aes_128.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/baconian_cipher/baconian_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/diophantine/diophantine.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/bigger_is_greater/bigger_is_greater.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/affine_cipher/affine.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/2d_array/rotate_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_product_subarray/maximum_product_subarray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/pairwise_swap_on_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/permutation_lexicographic_order/permutation_lexicographic_order.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/peterson_algorithm_for_mutual_exclusion/peterson_algorithm_in_c/mythreads.h"
                },
                {
                    "@type": "item",
                    "name": "guides/coding_style/c++/uncrustify_tests/output/space001.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/search_in_a_rotated_array/search_in_a_rotated_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/image_stitching/imagestitching.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/binary_to_decimal/Conversion_from_Binary_to_Decimal.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/best_time_to_sell_stock_II/best_time_to_sell_stock_II.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rsa/rsa.c"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/des_cipher/des_java/DES.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/maximum_xor_value/maximum_xor_value.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/caesar_cipher/caesar_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/affine_cipher/affine.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/baconian_cipher/baconian_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rot13_cipher/rot13_cipher2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/crossword_puzzle/crossword_puzzle.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/morse_cipher/morse_code.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/atbash_cipher/atbash_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/xor_swap/xor_swap.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/canny/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/kth_smallest_element_algorithm/kth_smallest_element_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list.h"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fast_inverse_sqrt/fast_inverse_sqrt.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/swap_nodes_in_pairs.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/playfair_cipher/playfair_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "guides/coding_style/c++/uncrustify_tests/input/space001.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/count_trailing_zeroes/count_trailing_zeroes_factorial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/vigenere_cipher/vigenere_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/modular_inverse/modular_inverse.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/morse_cipher/morse_code_generator.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/canny/canny.h"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/canny/canny.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/morse_code/morsecode.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/morse_cipher/morse_code_generator.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/lonely_integer/lonely_integer.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/morse_cipher/morse_code_translator.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/byte_swapper/byte_swapper.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/atbash_cipher/atbash_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/autokey_cipher/autokey_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/xor_swap/xor_swap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bron_kerbosch_algorithm/bron_kerbosch_algorithm.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/autokey_cipher/autokey_cipher.c"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rsa/rsa.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/des_cipher/des_java/Main.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/caesar_cipher/caesar_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/caesar_cipher/caesar_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/autokey_cipher/autokey_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/max_heap/max_heap.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/houghtransform/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/selection_algorithms/src/quick_select.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/rot13_cipher/rot13_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/modular_inverse/modular_inverse.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/huffman_encoding/huffman.java"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/caesar_cipher/decryption.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/max_heap/max_heap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/vigenere_cipher/vigenere_cipher.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/integer_to_roman/integer_to_roman.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/b_tree/b_tree/b_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/sudoku_solve/sudoku_solve.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "9",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/friends_pairing/friends_pairing.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_linked_list/queue_using_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/operations/push/push.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_stack/queue_using_stack.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/Quick_sort_usingSack/quick_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/processCreation/Processes.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/delete_array/del.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/bitmask_dp/bitmask_dp_prob#1.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/blockchain/UtilityClass.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/minqueue/minqueue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/bottom_view_binary_tree/bottom_view_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_stack/queue_using_stack.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/reverse_queue/reverse_queue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/abstract_stack/cpp/array_stack.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/n_queen.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/postfix_evaluation/postfix_evaluation.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue/queue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue/queue.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/Queue_using_Linked_list/Queue_using_Linked_List.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/shortest_seek_time_first/shortest_seek_time_first.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/abstract_stack/cpp/array_stack/array_stack.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/reverse_stack/reverse_stack_without_extra_space.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/box_stacking/box_stacking.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/reverse_queue/reverse_queue.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/skip_list/skip_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/stack_using_queue/stack_using_queue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_c/queue.h"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_c/queue.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/postfix_evaluation/postfix_evaluation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_postfix/infix_to_postfix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/stack/stack.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_stack/queue_using_stack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/balanced_expression/balanced_expression.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/abstract_stack/cpp/is_stack.h"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/shell/c/shell.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue/queue.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/partitioned_allocation/next_fit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/postfix_evaluation/postfix_evaluation.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/stack/stack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_linked_list/queue_using_linked_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/reverse_stack/reverse_stack.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/wildcard_matching/wildcard.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/abstract_stack/is_stack.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/balanced_expression/balanced_expression.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/skip_list/skip_list.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/box_stacking/box_stacking.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_prefix/infix_to_prefix.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/binary_tree/binary_tree/tree/bottom_view_binary_tree/bottom_view_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/sort_stack/sort_stack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/stack/stack.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/partitioned_allocation/worst_fit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue_using_linked_list/queue_using_linked_list.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_c/round_robin.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_postfix/infix_to_postfix2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_postfix/infix_to_postfix.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_prefix/infix_to_prefix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/partitioned_allocation/best_fit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/partitioned_allocation/first_fit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/queue/queue_vector.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/postfix_to_prefix/postfix_to_prefix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/infix_to_postfix/infix_to_postfix.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/balanced_expression/balanced_expression.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/reverse_stack/reverse_stack.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/sort_stack/sort_stack.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/friends_pairing/friends_pairing.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "10",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/singly_linked_list/singly_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/uint8_t/int8_t_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/sort_vector/sorting_vector.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/line_drawing_alrogrithm/dda/dda.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/smallest_remaining_time_first/srtf.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/reverse_array_using_stack/reverse_array_using_stack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/amicable_numbers/amicable_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/circle_drawing_algorithm/mid_point_algorithm/mid_point_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/perfect_number/perfect_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tower_of_hanoi/tower_of_hanoi_binary_solution.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/biggest_of_n_numbers/biggest_of_n_numbers2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/trapping_rain_water/rainwater_trapping.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fibonacci_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_atkin/sieve_of_atkin.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/stack/abstract_stack/cpp/array_stack/array_stack.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/selection_algorithms/src/quickselect_stl.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/median_of_two_sorted_arrays/median_of_two_sorted_arrays.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/maximum_weight_independent_set_of_path_graph/maximum_weight_independent_set_of_path_graph.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/iterator_pattern/iterator.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/majority_element/majority_element.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/babylonian_method/babylonian_method.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/diamond_square/diamondsquare.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/mathematical_algorithms/automorphic_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/check_is_square/check_is_square.c"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/circle_drawing_algorithm/bresenham's_circle_drawing_algorithm/bresenham's_circle_drawing_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/Handlingexceptions/Handlingexp.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/test/test_exponentiation_by_squaring.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fibonacci_number/fibonacci_for_big_numbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/switch-case.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/minimum_coins/minimum_coins.c"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/square_free_number/squarefreenumber.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/integer_conversion/decimal_to_bin.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/validate_ip/validate_ip/validate_ipv4.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/vector-to-map.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_power.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/perfect_number/perfect_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/square_free_number/square_free_number.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/for.c"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/calculator/simpleCalculator.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/multiway_tree/union_find/test_union_find.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/main.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/main.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_028/problem_028.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/babylonian_method/babylonian_method.c"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/validate_ip/validate_ip/validate_ipv6.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/builder/main.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/iterator_pattern/main.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/square_free_number/square_free_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/tribonacci_numbers/tribonacci_numbers.c"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/binary_search/first_and_last_position_in_sorted_array/firstAndLastPosInSortedArray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cryptography/src/caesar_cipher/encryption.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/scheduling/round_robin_scheduling/round_robin_scheduling.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/arithmetic_on_large_numbers/string_factorial.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/merge_arrays/merge_two_arrays.c"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/Transformation/2D Transformation/Translation/Translation.c"
                },
                {
                    "@type": "item",
                    "name": "code/computer_graphics/src/line_drawing_alrogrithm/Bresenham's Line Drawing Algrorithm/BDA.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/main.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/test/test_naive_pattern_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/babylonian_method/babylonian_method.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/check_is_square/check_is_square.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/integer_conversion/decimal_to_hex.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/biggest_of_n_numbers/biggest_of_n_numbers.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "11",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/false_position/src/False Position.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/loop/continue.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/biggest_of_n_numbers/biggest_of_n_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/spiral_print/spiral_print.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/karatsuba_multiplication/karatsuba_multiplication.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/Climbing Stairs/solution.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/kmp_algorithm/kmp_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/support_vector_machine/svm.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/bresenham_circle/bresenham_circle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/z_algorithm/z_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/addition_using_bits/addition_using_bits.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/spiral_print/spiral_print.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/dining_philosophers/dining_philosophers.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/test/addition_using_bits_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/strassen_matrix_multiplication/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/break.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/pascal_triangle/pascal_triangle.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/binomial_coefficient/binomial_coefficient.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/primality_tests/miller_rabin_primality_test/miller_rabin_primality_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/iteration/src/Iteration Method.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/Min_Max/alphabetaprune.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_004/problem_004.java"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/least_recently_used/lru.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_017/problem_017.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/sphere_tetrahedron_intersection/sphere_tetrahedron_intersection.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_021/problem_021.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/other/ways_to_swap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/boyer_moore_algorithm/boyer_moore_algorithm2.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lucas_theorem/lucas_theorem.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/trapping_rain_water/trapping_rain_water.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_009/problem_009.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/algorithm_x/algorithm_x.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/trapping_rain_water/trapping_rain_water.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/jacobi_method/jacobi_method.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/taxicab_numbers/taxicab_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/clear_bits_from_msb/clear_bits_from_msb.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/test/spiral_printing/test_spiral_print.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/mymath.h"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/multiply.c"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/add.c"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/divide.c"
                },
                {
                    "@type": "item",
                    "name": "code/shell_script/make_and_makefile/subtract.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/bit_division/bit_division.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/bisection/src/Bisection Method.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/addition_using_bits/addition_using_bits.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/naive_pattern_search/naive_pattern_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/do-while.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/kmp_algorithm/kmp.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/karatsuba_multiplication/karatsuba_multiplication.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/spiral_print/spiral_print.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/binomial_coefficient/binomial_coefficient.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/karatsuba_multiplication/multiply.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/While.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/pascal_triangle/pascal_triangle.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/clear_bits_from_msb/clear_bits_from_msb.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/loop/continue.c"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/memory_management/least_recently_used/lru.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/newton_rapson/src/Newton Rapson Method.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/pascal_triangle/pascal_triangle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/segregate_positive_negative/segregate_positive_negative.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/spiral_matrix/recursive_spiral_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/karatsuba_multiplication/karatsubamultiply.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/addition_using_bits/addition_using_bits.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/multiply_by_2/multiply_by_2.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "12",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/TOTR/TOTR.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/LEPERMUT/LEPERMUT.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/NBONACCI/NBONACCI.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CHNUM/CHNUM.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/STONES/STONES.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/OJUMPS/OJUMPS.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MATCHES/matches.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/GDOG/GDOG.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/SPCANDY/SPCANDY.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_003/problem_003.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/J7/J7.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CNOTE/CNOTE.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/RRCOPY/RRCOPY.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_005/problem_005.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/SNUG_FIT/snug_fit.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/ERROR/ERROR.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CONFLIP/CONFLIP.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_005/problem_005.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/DIVIDING/DIVIDING.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_025/problem_025.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/3D_aurface_area/3D_surface_area.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MARBLES/MARBLES.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/NUKES/NUKES.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_006/problem_006.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/almost_sorted/almost_sorted.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_001/problem_001.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/FCTRL/Factorial.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_004/problem_004.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/COVID19/COVID19.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CHDIGER/CHDIGER.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MARCHA1/MARCHA1.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/JOHNY/JOHNY.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/HORSES/HORSES.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/VOTERS/VOTERS.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/SALARY/SALARY.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_003/problem_003.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/Greedy Puppy/Greedy_Pupy.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MAXDIFF/MAXDIFF.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/RIGHTRI/RIGHTRI.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/JOHNY/JOHNY.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MNMX/MNMX.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_026/problem_026.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_011/problem_011.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CASH/hard_cash.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CLEANUP/CLEANUP.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/array_manipulation/array_manipulation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MATCHES/Mathces.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/NUMGAME2/NUMGAME2.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CARVANS/CARVANS.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CHEFING/CHEFING.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_012/problem_012.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/hackerrank/encryption/encryption.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_001/problem_001.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "13",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/binomial_coefficient/binomial_coefficient.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/partitions_of_number/partitions_of_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/topological_sort/print_all_topological_sorts.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_005/problem_005.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/STUPMACH/Stupmach.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/nqueen_bitmask.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/protection/proxy/userproxy.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/queue/double_ended_queue/deque_library_function.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/singleton_pattern/singleton_pattern.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/matrix_chain_multiplication/matrix_chain_multiplication.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/partitions_of_set/partitions_of_set.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/matrix_chain_multiplication/matrix_chain_multiplication.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/binary_search/ceil_of_element/ceil_of_element_in_sorted_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/Count_Subsequence_Having_Product_Less_Than_K/Solution.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/binomial_coefficient/binomial_coefficient.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/protection/proxy/registeredusers.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/virtual/proxy/demo.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/prefix_sum_array/prefix_sum_subarray.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/virtual/proxy/videoproxy.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/digit_dp/digit_dp.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/password_strength_checker/pw_checker.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/operating_system/src/concurrency/readers_writers/readers_writers.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/rabin_karp_algorithm/rabinKarp.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/house_robber/HouseRobber.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/binomial_coefficient/binomial_coefficient.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/kruskal_minimum_spanning_tree/kruskal_minimum_spanning_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/algorithm_applications/src/binary_search/floor_of_element/floor_of_element_in_sorted_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/water_connection/water_connection_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/sudoku_solve/sudoku_solve.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/knapsack/Knapsack_DP_all3tech.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/demo/demo.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/password_strength_checker/pw_checker.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/n_queen.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/maxSubArray(KadaneAlgorithm)/KadaneAlgorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/sudoku_solve/sudoku_solver.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/n_queen_bitimp.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/digit_dp/DigitDP.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/LAZERTST/LAZERTST.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/Java/Kadane_algo.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CHFING/CHFING.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/virtual/proxy/video.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/maxSubArray(KadaneAlgorithm)/KadaneAlgorithm.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/singleton_pattern/singleton_pattern.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/protection/proxy/user.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/matrix_chain_multiplication/matrixchainmultiplication.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/n_queen_backtracking.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/virtual/proxy/ultrahdvideo.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/proxy/protection/proxy/validuser.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/demo.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/n_queen/n_queen_bitset.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "14",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/builder/builder/person.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/morning/routine/morningroutinefacade.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newman_conway/newman_conway_recursion.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/conways_game_of_life/life.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine/writecode.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/lexicographically_largest_palindrome_subsequence/Lexicographyically_largest_palindrome_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/egg_dropping_puzzle/eggdroppingpuzzle.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine/eveningroutinefacade.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/fifteen_puzzle/fifteen.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine/eat.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/observer/subject.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/observer/network/artist.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/gym/deadlift.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/eatatwork.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newman_conway/newman_conway_sequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine/takeashower.java"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/conways_game_of_life/game_of_life_c_sdl.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/playfifa.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/leave.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/EGGFREE/EGGFREE.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/watchyoutubevideos.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/evening/routine/watchyoutubevideos.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/bresenham_line/bresenham_line.java"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/jaccard_similarity/jaccard.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/tiling_problem/tiling_problem.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/knight_tour/knight_tour_withoutbt.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/jobfacade.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/observer/network/fan.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/builder/builder/nationality.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/collatz_conjecture_sequence/collatz_conjecture_sequence.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/gym/squat.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/gym/benchpress.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_pattern/observer_pattern.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/builder/builder/personbuilder.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/knight_tour/knight_tour.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/newman_conway/newman_conway_dp.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/morning/routine/dress.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/morning/routine/eat.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newman_conway/newman_conway_sequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/egg_dropping_puzzle/egg_dropping_puzzle.c"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/conways_game_of_life/conway.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/morning/routine/leave.java"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/von_neumann_cellular_automata/von_neumann_cellular_automata.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/gym/gymfacade.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/morning/routine/wakeup.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/job/develop.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/observer_java/observer/observer.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/egg_dropping_puzzle/egg_dropping_puzzle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/facade/daily/tasks/dailyroutinefacade.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/knight_tour/knight_tour.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "15",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/search/src/linear_search/sentinellinearsearch.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/HILLJUMP/HILLJUMP.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bubble_sort/bubble_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifttype.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/longest_common_subsequence/Printing_longest_common_subsequence.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/interpolation_search/interpolation_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/jump_search/jump_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifts/nothing.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/binary_search/binarysearchrecursion.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/test/test_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/exponential_search/exponential_search2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/test/test_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/quick_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifts/car.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/linear_search/linear_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/merge_sort/merge_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/binary_search/binary_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/binary_search/binary_search_2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/binary_search/binary_search_implementation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifts/gift.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/interpolation_search/interpolation_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/jump_search/jump_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/fibonacci_search/fibonacci_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/linear_search/linear_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/exponential_search/exponential_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/exponential_search/exponential_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifts/toy.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/gifts/booze.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/factory/roulette.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/linear_search/Linear Search In Array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/binary_search/binary_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/binary_search/binary_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/linear_search/linear_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/ternary_search/ternary_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/interpolation_search/interpolation_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/ternary_search/ternary_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/languages/c/linear_search/linear_search_duplicates.c"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/linear_search/linear_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/ternary_search/ternary_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/selection_sort/selection_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/exponential_search/exponential_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/jump_search/jump_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/fibonacci_search/fibonacci_search.c"
                },
                {
                    "@type": "item",
                    "name": "code/search/src/fibonacci_search/fibonacci_search.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/linear_search/Linear Search In Duplicate Array.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "16",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_factors/prime_factors.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_006/problem_006.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_numbers_of_n/prime_numbers_of_n.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/euler_totient/euler_totient.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_001/problem_001.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/coprime_numbers/coprime_numbers.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_atkin/sieve_of_atkin.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/leap_year/leap_year.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/segmented_sieve_of_eratosthenes/segmented_sieve_of_eratosthenes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_003/problem_003.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/count_of_ways_n/count_of_ways_n.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_037/problem_037.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_numbers_of_n/prime_numbers_of_n.c"
                },
                {
                    "@type": "item",
                    "name": "code/theory_of_computation/src/non_deterministic_finite_automata_to_finite_automata/ndfa_to_dfa.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_eratosthenes/sieve_of_eratosthenes.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_027/problem_027.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/CASH/HardCash.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/euler_totient/euler_totient.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_factors/sum_of_primes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_atkin/sieve_of_atkin.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_eratosthenes/sieve_of_eratosthenes.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/leap_year/leap_year.java"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/closest_pair_of_points/closest_pair.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_007/problem_007.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_eratosthenes/sieve_of_eratosthenes.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/GUESSNUM/Guessnum.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_factors/sum_of_prime_factors.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/sieve_of_eratosthenes/sieve_of_eratosthenes_compact.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/NEWSCH/NEWSCH.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/prime_factors/prime_factors.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/russian_peasant_multiplication/russian_peasant_multiplication.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/russian_peasant_multiplication/russian_peasant_multiplication.c"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/leap_year/leap_year.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_010/problem_010.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/PRIME1/PRIME1.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "17",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/boyer_moore_algorithm/boyer_moore_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/bridge_tree/bridge_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/c/dfa.h"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/c/dfa.c"
                },
                {
                    "@type": "item",
                    "name": "code/selection_algorithms/src/quickselect.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/arithmetic_on_large_numbers/string_multiplication.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/smallest_number_to_the_left/smallest.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/EID2/eid2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_023/problem_023.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/compression/src/lossless_compression/huffman/huffman.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/random_from_stream/random_number_selection_from_a_stream.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/theory_of_computation/src/deterministic_finite_automaton/dfa.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/quick_sort/quicksort.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/array_median/array_median.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/min_rests_skipped_to_reach_on_time/min_skips.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/randomized_quick_sort/randomized_quicksort.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/quick_sort/quick_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/c/types.h"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/c/types.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/COINS/coins.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/langtons_ant/langtons_ant.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/GCD2/GCD2.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/searchstringusingdfa.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/finite_automata/c/main.c"
                },
                {
                    "@type": "item",
                    "name": "code/compression/test/lossless_compression/huffman/test_huffman.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/std/std.c"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/boyer_moore_algorithm/boyer_moore_algorithm.c"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/AMSGAME1/AMSGAME1.c"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/kth_smallest_element_algorithm/kth_smallest_element_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/arithmetic_on_large_numbers/string_subtract.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/quick_sort/quick_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/compression/src/lossless_compression/lempel_ziv_welch/lzw.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/biconnected_components/biconnected_components.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/min_rests_skipped_to_reach_on_time/Minimum Skips to Arrive at Meeting On Time.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/arithmetic_on_large_numbers/string_addition.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/reservoir_sampling/reservoir_sampling.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "18",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lexicographic_string_rank/lexicographic_string_rank.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/prim_minimum_spanning_tree/prim_minimum_spanning_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/inversion_count/count_inversions.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/kruskal_minimum_spanning_tree/kruskal_minimum_spanning_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/inversion_count/inversion_count.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/union_find/union_find.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lexicographic_string_rank/lexicographic_string_rank.c"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/monte_carlo/src/pi_monte_carlo.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/kruskal_minimum_spanning_tree/kruskal.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/validate_ip/ValidateIp.java"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/monte_carlo/src/integral_montecarlo.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/sphere_tetrahedron_intersection/luvector.hpp"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/monte_carlo/src/integral_monte_carlo.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/inversion_count/inversion_count.java"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/karger_minimum_cut_algorithm/karger_minimum_cut_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/minimum_operations_elements_equal/EqualizeEveryone.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/disjoint_set/DisjointSet(DS).cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/newton_polynomial/newton_polynomial.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/test/kruskal_minimum_spanning_tree/test_kruskal.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/union_find/union_find_dynamic.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/lexicographic_string_rank/lexicographic_string_rank.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/tree/suffix_array/suffix_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/TACHSTCK/TACHSTCK.c"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/karger_minimum_cut/karger_minimum_cut.java"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/kruskal_minimum_spanning_tree/kruskal_using_adjacency_matrix.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/union_find/union_find.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/kruskal_minimum_spanning_tree/kruskal.c"
                },
                {
                    "@type": "item",
                    "name": "code/numerical_analysis/monte_carlo/src/pi_montecarlo.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/steepest_descent/steepest_descent.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "19",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/chans_algorithm/chans_algorithm.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_triangle/area_of_triangle_herons_formula.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/k_nearest_neighbours/KNN.c"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/fractional_knapsack/fractional_knapsack.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/distance_between_points/distance_between_points.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/SLAB/Slab.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_triangle/area_of_triangle.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_polygon/area_of_polygon.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/graham_scan/graham_scan2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/jarvis_march/jarvis_march.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/graham_scan/graham_scan.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/jarvis_march/jarvis_march2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/quick_hull/quick_hull.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_triangle/area_of_triangle.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/iterator_pattern/student.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_triangle/area_of_triangle.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/distance_between_points/distance_between_points.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/distance_between_points/distance_between_points.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/k_nearest_neighbours/k_nearest_neighbours.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_polygon/area_of_polygon.java"
                },
                {
                    "@type": "item",
                    "name": "code/languages/cpp/delete_vs_free/free_vs_delete.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/halfplane_intersection/halfplane_intersection.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/quick_hull/quick_hull2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/iterator_pattern/class.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/iterator_pattern/classiterator.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/area_of_polygon/area_of_polygon.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/quick_hull/quick_hull.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/graham_scan/graham_scan.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "20",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/Intersection_of_two_sorted_lists.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/min_heap/min_heap.java"
                },
                {
                    "@type": "item",
                    "name": "code/randomized_algorithms/src/kth_smallest_element_algorithm/kth_smallest_element.java"
                },
                {
                    "@type": "item",
                    "name": "code/graph_algorithms/src/dijkstra_shortest_path/dijkstra_shortest_path.c"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/tournament_method_to_find_min_max/tournament_method_to_find_min_max.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/binary_heap/binary_heap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/greedy_algorithms/src/huffman_coding/huffman_coding.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/rod_cutting/rod_cutting.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/min_heap/min_heap.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/max_heap/max_heap.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/bag/bag.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/maxHeap/maxHeap.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/maxHeap/maxHeap.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/bag/bag.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/Linked_List/Remove_duplicates_in_unsorted_linked_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_014/problem_014.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/bag/test_bag.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/unclassified/src/no_operator_addition/addition.c"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/conways_game_of_life/life.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/heap/min_heap/min_heap.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "21",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/liang_barsky_algo/liang_barsky_algo.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/dda_line/dda_line.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bead_sort/bead_sort.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/cohen_sutherland_lineclip/cohen_sutherland_lineclip.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_line_intersection/2d_line_intersection.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_line_intersection/2d_line_intersection.java"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/quick_hull/quick_hull.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_line_intersection/2d_line_intersection.c"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_separating_axis_test/2d_separating_axis_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bead_sort/bead_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/bresenham_circle/graphics.h"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/bresenham_line/bresenham_line.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/liang_barsky_algo/liang_barsky_algo.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_line_intersection/line_determinant_method.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/sorting/src/bead_sort/bead_sort.java"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/project_euler/problem_102/problem_102.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/sutherland_hodgeman_clipping/sutherland_hodgeman_clipping.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/computational_geometry/src/2d_line_intersection/line_elemination_method.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "22",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/x_power_y/x_power_y.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/power_of_2/power_of_2.c"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/primality_tests/miller_rabin_primality_test/miller_rabin_primality_test.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/rabin_karp_algorithm/rabin_karp.c"
                },
                {
                    "@type": "item",
                    "name": "code/blockchain/Block.java"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/power_of_4/power_of_4.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/fermats_little_theorem/fermats_little_theorem.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_by_squaring/exponentiation_by_squaring.c"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/power_set/power_set.c"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/power_of_2/power_of_2.java"
                },
                {
                    "@type": "item",
                    "name": "code/divide_conquer/src/power_of_a_number/power_of_a_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/primality_tests/solovay_strassen_primality_test/solovay_strassen_primality_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/bit_manipulation/src/power_of_2/power_of_2.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/blockchain/Application.java"
                },
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/rabin_karp_algorithm/rabin_karp.java"
                },
                {
                    "@type": "item",
                    "name": "code/backtracking/src/power_set/power_set.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "23",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/lazy_segment_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree_rmq_with_update.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/fenwick_tree/fenwick_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/segment_tree/segment_tree_optimized.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/modulo_exponentation_power.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/segment_tree/segment_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/segment_tree/segment_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/fenwick_tree/fenwick_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/fenwick_tree/fenwick_tree.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "24",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/soldiers/order.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/soldiers/soldier.java"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/die_simulation/die_simulation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/civilian.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/soldiers/adaptee.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/soldiers/general.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/movement.java"
                },
                {
                    "@type": "item",
                    "name": "code/design_pattern/src/OOP_patterns/adapter/adaptor.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "25",
            "nested": [
                {
                    "@type": "item",
                    "name": "test/c++/catch_pch.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/cellular_automaton/src/genetic_algorithm/genetic.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/std/std.cpp"
                },
                {
                    "@type": "item",
                    "name": "test/c++/catch.hpp"
                },
                {
                    "@type": "item",
                    "name": "test/c++/test_sample.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/sat/togasat.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/exponentiation_power/exponentiation_power.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/list/skip_list/skip_list.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "26",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/red_black_tree/red_black_tree.h"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/red_black_tree/red_black_tree.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/sobelfilter/sobel.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/test/tree/multiway_tree/red_black_tree/test_red_black.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/red_black_tree/red_black_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/mathematical_algorithms/src/2sum/2sum.c"
                },
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/largest_sum_contiguous_subarray/largest_sum_contiguous_subarray.c"
                },
                {
                    "@type": "item",
                    "name": "code/artificial_intelligence/src/image_processing/prewittfilter/prewitt.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "27",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/fenwick_tree/fenwick_tree_inversion_count.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/segment_tree/LazySegmentTree.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree_lazy_propagation.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/segment_tree/segment_tree_rmq.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "28",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/multiway_tree/van_emde_boas_tree/van_emde_boas.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/space_partitioning_tree/kd_tree/kd_tree.java"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/van_emde_boas_tree/van_emde_boas_tree.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "29",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/bloom_filter/bloom_filter.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/networking/src/determine_endianess/determine_endianess.c"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/hashs/bloom_filter/bloom_filter.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "30",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/JAIN/JAIN.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/MEETUP/MEETUP.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/online_challenges/src/codechef/STRWN/STRWN.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "31",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/tree/tree/trie/trie.cpp"
                },
                {
                    "@type": "item",
                    "name": "code/data_structures/src/sparse_table/sparse_table.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "32",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/data_structures/src/2d_array/set_matrix_zero.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "33",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/dynamic_programming/src/knapsack/knapsack.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "34",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/sorting/src/quick_sort/quick_sort_median_of_medians.c"
                }
            ]
        },
        {
            "@type": "group",
            "name": "35",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/string_algorithms/src/aho_corasick_algorithm/aho_corasick_algorithm.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "36",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/unclassified/src/array_to_set/arraytoset_iterator.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "37",
            "nested": [
                {
                    "@type": "item",
                    "name": "code/unclassified/src/jaccard_similarity/jaccard.c"
                }
            ]
        }
    ]
}