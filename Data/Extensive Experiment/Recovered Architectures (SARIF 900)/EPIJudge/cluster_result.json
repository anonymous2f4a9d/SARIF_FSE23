{
    "@schemaVersion": "1.0",
    "name": "clustering",
    "structure": [
        {
            "@type": "group",
            "name": "0",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DeadlockDetection.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/GrayCode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DeleteFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MatrixRotation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DeleteNodeFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortedArraysMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sort_almost_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/gray_code.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sort_increasing_decreasing_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_in_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/minimum_distance_3_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/GrayCode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/delete_node_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/gray_code.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_from_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/intersect_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RotateArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_from_preorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/kth_largest_element_in_two_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MinimumDistance3SortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/zip_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchFrequentItems.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_frequent_items.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sorted_lists_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/even_odd_list_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchFrequentItems.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/delete_node_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MinimumDistance3SortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PivotList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sort_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_tree_balanced.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/arbitrage.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KLargestValuesInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/arbitrage.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/two_sorted_arrays_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortedArraysMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/n_queens.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/kth_largest_element_in_two_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_in_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/rotate_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BstMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sort_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/matrix_rotation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/even_odd_list_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sorted_lists_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/doubly_list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sort_almost_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RotateArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BstToSortedList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sorted_list_to_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_from_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EvenOddListMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/h_index.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BstFromSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/intersect_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/reverse_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/roman_to_integer.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sorted_arrays_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SpiralOrdering.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchInList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_to_sorted_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/rotate_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_list_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_to_sorted_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortIncreasingDecreasingArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/h_index.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortAlmostSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortAlmostSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MatrixRotation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_from_preorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/minimum_distance_3_sorted_arrays.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_frequent_items.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortedListsMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/HIndex.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/HIndex.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DoublyListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sorted_list_to_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/doubly_list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsListPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BstFromPreorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortedListToBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/zip_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TwoSortedArraysMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LookAndSay.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/k_largest_values_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Arbitrage.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntersectSortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntersectSortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/two_sorted_arrays_merge.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_list_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/matrix_rotation.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "1",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/fmt_print.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReverseDigits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestSubarrayWithDistinctValues.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/minimum_weight_path_in_a_triangle.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/lowest_common_ancestor.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/two_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/even_odd_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchForMinMaxInArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LowestCommonAncestorInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxSquareSubmatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/real_square_root.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KLargestInHeap.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/stack_with_max.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/two_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RealSquareRoot.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/three_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/substring_match.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MinimumWeightPathInATriangle.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/k_largest_in_heap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/string_decompositions_into_dictionary_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/lowest_common_ancestor_with_parent.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/calendar_rendering.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_square_submatrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/lowest_common_ancestor_with_parent.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/fmt_print.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DirectoryPathNormalization.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/StackWithMax.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EvenOddArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SubstringMatch.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/reverse_digits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TwoSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntSquareRoot.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SumRootToLeaf.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DirectoryPathNormalization.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/three_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_string_decomposable_into_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PathSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/fmt_print_fwd.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/reverse_digits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CalendarRendering.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/lowest_common_ancestor_close_ancestor.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/path_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_string_decomposable_into_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_square_submatrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sum_root_to_leaf.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/minimum_weight_path_in_a_triangle.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RealSquareRoot.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/reverse_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/reverse_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/StackWithMax.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/string_decompositions_into_dictionary_words.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/reverse_sublist.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/stack_with_max.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchForMinMaxInArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ReverseWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LowestCommonAncestor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/path_sum.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/StringDecompositionsIntoDictionaryWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/StringDecompositionsIntoDictionaryWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/real_square_root.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/reverse_sublist.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ReverseDigits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/lowest_common_ancestor_close_ancestor.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/lowest_common_ancestor.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/directory_path_normalization.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CalendarRendering.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntSquareRoot.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/fmt_print_fwd.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/even_odd_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ThreeSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_submatrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/k_largest_in_heap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/directory_path_normalization.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LowestCommonAncestorWithParent.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/lowest_common_ancestor_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ReverseSublist.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SumRootToLeaf.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsStringDecomposableIntoWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LowestCommonAncestorCloseAncestor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_utils_meta.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TwoSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PathSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_utils_meta.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ThreeSum.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsStringDecomposableIntoWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxSubmatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/lowest_common_ancestor_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Knapsack.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/knapsack.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sum_root_to_leaf.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/int_square_root.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Knapsack.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EvenOddArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/substring_match.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/int_square_root.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReverseWords.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MinimumWeightPathInATriangle.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SubstringMatch.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "2",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsAnonymousLetterConstructible.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/reverse_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/binomial_coefficients.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/swap_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/first_missing_positive_entry.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_tree_symmetric.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/remove_duplicates_from_sorted_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/reverse_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/random_sequence_checker.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/random_sequence_checker.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_for_missing_element.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NearestRepeatedEntries.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/minimum_waiting_time.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NearestRepeatedEntries.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/number_of_traversals_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LeftRightJustifyText.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BinomialCoefficients.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/k_largest_values_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/RandomSequenceChecker.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/left_right_justify_text.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CountInversions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReplaceAndRemove.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_valid_sudoku.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_for_missing_element.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/descendant_and_ancestor_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NextPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_string_in_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MinimumWaitingTime.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/replace_and_remove.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/element_appearing_once.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/nearest_repeated_entries.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsStringInMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/element_appearing_once.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SuccessorInTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ReverseBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/minimum_waiting_time.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SwapBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LeftRightJustifyText.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/successor_in_tree.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/swap_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SwapBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ElementAppearingOnce.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsStringInMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/AbsentValueArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/count_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_anonymous_letter_constructible.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_string_in_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/AbsentValueArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/FirstMissingPositiveEntry.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CountBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/count_inversions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/absent_value_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/left_right_justify_text.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/closest_int_same_weight.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/count_inversions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/FirstMissingPositiveEntry.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/closest_int_same_weight.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/first_missing_positive_entry.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ElementAppearingOnce.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NumberOfTraversalsMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchForMissingElement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RemoveDuplicatesFromSortedList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/binomial_coefficients.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CountInversions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MinimumWaitingTime.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchForMissingElement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RemoveDuplicatesFromSortedList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_anonymous_letter_constructible.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/count_bits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReverseBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_tree_symmetric.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsTreeSymmetric.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CountBits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/descendant_and_ancestor_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/RandomSequenceChecker.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/absent_value_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ReplaceAndRemove.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/successor_in_tree.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsAnonymousLetterConstructible.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/replace_and_remove.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RemoveDuplicates.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsTreeSymmetric.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/nearest_repeated_entries.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RemoveDuplicates.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/remove_duplicates_from_sorted_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ClosestIntSameWeight.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BinomialCoefficients.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "3",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Hanoi.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NumberOfTraversalsMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Permutations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LookAndSay.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RefuelingSchedule.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/nonuniform_random_number.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntAsArrayIncrement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MakingChange.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PrimitiveMultiply.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/refueling_schedule.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntervalAdd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxSafeHeight.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/int_as_array_multiply.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/next_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NonuniformRandomNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntAsListAdd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/StringIntegerInterconversion.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ABSqrt2.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Combinations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/a_b_sqrt2.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NextPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Permutations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RandomPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/int_as_array_multiply.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/StringIntegerInterconversion.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/intervals_union.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/intervals_union.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/primitive_multiply.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/apply_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/platform.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/a_b_sqrt2.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/permutations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/making_change.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsNumberPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/combinations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NumberOfTraversalsStaircase.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/string_integer_interconversion.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/random_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/nonuniform_random_number.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/platform.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RefuelingSchedule.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ClosestIntSameWeight.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntervalAdd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/permutations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntervalsUnion.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/refueling_schedule.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ApplyPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/hanoi.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/hanoi.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DrawingSkyline.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxSafeHeight.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Hanoi.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/random_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntAsListAdd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Combinations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RectangleIntersection.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/next_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/int_as_list_add.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PrimitiveMultiply.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/string_integer_interconversion.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/number_of_traversals_staircase.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/int_as_list_add.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ApplyPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DrawingSkyline.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/Platform.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MinimumPointsCoveringIntervals.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntAsArrayMultiply.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IntervalsUnion.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/primitive_multiply.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/combinations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ABSqrt2.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/Platform.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntAsArrayIncrement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IntAsArrayMultiply.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/making_change.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NonuniformRandomNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_safe_height.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MakingChange.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/apply_permutation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RandomPermutation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/look_and_say.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/number_of_traversals_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NumberOfTraversalsStaircase.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RectangleIntersection.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/number_of_traversals_staircase.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "4",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BinaryTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeWithParentInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KthNodeInTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxSubmatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/anagrams.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeLike.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_level_order.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KthNodeInTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LowestCommonAncestorInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeLike.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bst_prototype_shared_ptr.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_tree_a_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BinaryTreeNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeFromPreorderInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/BinaryTreeUtils.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreePreorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Anagrams.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeFromPreorderWithNull.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_postorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/binary_tree_utils.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeLevelOrder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_with_parent_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/binary_tree_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BinaryTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LowestCommonAncestorCloseAncestor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeExterior.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeConnectLeaves.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bst_prototype_shared_ptr.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EnumerateTrees.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NumberOfScoreCombinations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/BinaryTreeUtils.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LowestCommonAncestorWithParent.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_postorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/kth_node_in_tree.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/anagrams.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/kth_node_in_tree.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_right_sibling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/binary_tree_with_parent_prototype.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_from_preorder_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PrimitiveDivide.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsTreeABst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/binary_tree_utils.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeWithParentInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/binary_tree_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchUnknownLengthArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BinaryTreeNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreePostorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreePreorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeRightSibling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/enumerate_trees.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreePostorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SuccessorInTree.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_with_parent_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/primitive_divide.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EnumerateTrees.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LowestCommonAncestor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_from_preorder_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxSquareSubmatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_tree_a_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Anagrams.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_level_order.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/fibonacci.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeFromPreorderInorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BstNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/enumerate_trees.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Fibonacci.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/binary_tree_with_parent_prototype.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_right_sibling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeRightSibling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_inorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsTreeABst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Fibonacci.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/primitive_divide.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PrimitiveDivide.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TreeLevelOrder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KLargestInHeap.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "5",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SmallestNonconstructibleValue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/smallest_nonconstructible_value.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/OnlineMedian.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PhoneNumberMnemonic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_from_preorder_with_null.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SmallestNonconstructibleValue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sunset_view.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/find_salary_threshold.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_from_preorder_with_null.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/find_salary_threshold.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_preorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sunset_view.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/StringTransformability.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RandomSubset.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/StringTransformability.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/offline_sampling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/OfflineSampling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RunLengthCompression.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SunsetView.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/OnlineSampling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_preorder.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LevenshteinDistance.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KClosestStars.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_shifted_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/OfflineSampling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/FindSalaryThreshold.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/random_subset.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/levenshtein_distance.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaximumSubarrayInCircularArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PhoneNumberMnemonic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/UniformRandomNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/spreadsheet_encoding.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/uniform_random_number.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DutchNationalFlag.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KClosestStars.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/OnlineSampling.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MinimumPointsCoveringIntervals.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/phone_number_mnemonic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DutchNationalFlag.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/run_length_compression.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SpreadsheetEncoding.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SunsetView.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_shifted_sorted_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PrettyPrinting.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/phone_number_mnemonic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SmallestSubarrayCoveringAllValues.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/dutch_national_flag.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/smallest_subarray_covering_set.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/UniformRandomNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SpreadsheetEncoding.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SmallestSubarrayCoveringAllValues.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/online_median.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SmallestSubarrayCoveringSet.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/online_median.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/offline_sampling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/online_sampling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PrettyPrinting.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/random_subset.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/smallest_subarray_covering_set.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/spreadsheet_encoding.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RandomSubset.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/levenshtein_distance.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RunLengthCompression.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SmallestSubarrayCoveringSet.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/run_length_compression.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/smallest_nonconstructible_value.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/string_transformability.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/smallest_subarray_covering_all_values.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeFromPreorderWithNull.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LevenshteinDistance.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/pretty_printing.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/pretty_printing.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/OnlineMedian.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/online_sampling.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/uniform_random_number.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/smallest_subarray_covering_all_values.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/string_transformability.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/FindSalaryThreshold.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/dutch_national_flag.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "6",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_maze.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/BooleanTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/StringTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestOutput.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestOutput.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/remove_duplicates.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/IntegerTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/rectangle_intersection.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/BinaryTreeTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_output.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/VoidTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/deadlock_detection.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/range_lookup_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/ShortTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/ShortTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/calendar_rendering.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/BooleanTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/minimum_points_covering_intervals.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/interval_add.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/huffman_coding.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/defective_jugs.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/CharacterTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/SerializationTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/HuffmanCoding.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/range_lookup_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_output.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/VoidTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/group_equal_entries.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/LinkedListTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/TraitsFactory.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/drawing_skyline.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/LinkedListTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/EpiUserType.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/SerializationTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/TraitsFactory.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/serialization_traits.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/LongTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/k_closest_stars.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/HuffmanCoding.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/drawing_skyline.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_for_min_max_in_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/huffman_coding.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/k_closest_stars.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/line_through_most_points.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_of_sliding_window.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/BinaryTreeTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/IntegerTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/DoubleTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/LongTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/UserTypeTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/DoubleTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/ListTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_for_min_max_in_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/StringTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/line_through_most_points.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/GroupEqualEntries.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/remove_duplicates.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/SetTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LineThroughMostPoints.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/FloatTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LineThroughMostPoints.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/UserTypeTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/CharacterTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/serialization_traits.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/FloatTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/EpiUserType.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/serialization_traits/ListTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/GroupEqualEntries.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/minimum_points_covering_intervals.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/knapsack.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/group_equal_entries.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/rectangle_intersection.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/serialization_traits/SetTrait.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/interval_add.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_of_sliding_window.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "7",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CopyPostingList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsNumberPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_substring_with_matching_parentheses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/pascal_triangle.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsStringPermutableToPalindrome.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CopyPostingList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/enumerate_balanced_parentheses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/circular_queue.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/QueueWithMax.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PrimeSieve.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsValidParenthesization.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_number_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/prime_sieve.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RegularExpression.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestSubstringWithMatchingParentheses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EnumeratePalindromicDecompositions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_valid_parenthesization.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EnumerateBalancedParentheses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/circular_queue.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_string_permutable_to_palindrome.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_number_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_valid_parenthesization.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/QueueFromStacks.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RoadNetwork.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PostingListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RoadNetwork.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/enumerate_palindromic_decompositions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SnakeString.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/road_network.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/queue_with_max.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_string_permutable_to_palindrome.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_substring_with_matching_parentheses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PascalTriangle.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/pascal_triangle.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/posting_list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestSubstringWithMatchingParentheses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/road_network.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsStringPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_string_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/regular_expression.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/posting_list_node.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsStringPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsStringPalindromicPunctuation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/QueueFromStacks.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/copy_posting_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/snake_string.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PascalTriangle.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PostingListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/queue_with_max.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/QueueWithMax.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/prime_sieve.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/snake_string.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EnumeratePalindromicDecompositions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EnumerateBalancedParentheses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsStringPalindromicPunctuation.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PrimeSieve.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CircularQueue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CircularQueue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RegularExpression.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/copy_posting_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_string_palindromic_punctuation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsStringPermutableToPalindrome.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/queue_from_stacks.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/regular_expression.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_string_palindromic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/enumerate_balanced_parentheses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/queue_from_stacks.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/QueueWithMaxUsingDeque.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/enumerate_palindromic_decompositions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_string_palindromic_punctuation.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/queue_with_max_using_deque.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SnakeString.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "8",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsArrayDominated.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ValidIpAddresses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/buy_and_sell_stock.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/delete_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SudokuSolve.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_teams_in_photograph.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BuyAndSellStockTwice.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_teams_in_photograph.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SudokuSolve.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsValidSudoku.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ValidIpAddresses.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchRowColSortedMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxTeamsInPhotograph.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/buy_and_sell_stock_k_times.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/valid_ip_addresses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsCircuitWirable.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/valid_ip_addresses.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/delete_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/graph_clone.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sorted_array_remove_dups.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/GraphClone.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_array_dominated.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BuyAndSellStock.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sudoku_solve.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortedArrayRemoveDups.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BuyAndSellStockKTimes.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/GraphClone.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/buy_and_sell_stock_twice.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/buy_and_sell_stock_twice.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/graph_clone.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxTeamsInPhotograph.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BuyAndSellStockKTimes.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/n_queens.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sudoku_solve.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/sorted_array_remove_dups.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_circuit_wirable.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DeadlockDetection.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_circuit_wirable.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/buy_and_sell_stock.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SortedArrayRemoveDups.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsCircuitWirable.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BuyAndSellStockTwice.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/buy_and_sell_stock_k_times.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/deadlock_detection.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsArrayDominated.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_array_dominated.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsValidSudoku.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/BuyAndSellStock.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_valid_sudoku.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "9",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/generic_test_handler.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxProductAllButOne.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestResult.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/LexicographicalListComparator.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestUtilsConsole.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestResult.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestUtilsConsole.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_utils_console.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/EpiTest.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/EpiTestExpectedType.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/GenericTestHandler.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_utils.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/EpiProgramConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/GenericTest.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/GenericTestHandler.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_config.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestUtils.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TriBool.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_config.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_utils.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TriBool.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/EpiTestComparator.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/EpiTestComparator.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_failure.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxProductAllButOne.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestFailure.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/generic_test.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/EpiProgramConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestUtils.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_result.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/generic_test.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/EpiTest.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/GenericTest.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestFailure.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_result.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/tri_bool.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/EpiTestExpectedType.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/generic_test_handler.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_utils_console.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_product_all_but_one.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_product_all_but_one.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/LexicographicalListComparator.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/tri_bool.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_failure.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "10",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/WritingBuffer.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/PrettyPrint.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/ParseException.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonLiteral.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/insert_in_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonObject.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonLiteral.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/PrettyPrint.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonString.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonValue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/Member.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/AddingCredits.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonString.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/ParseException.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/lru_cache.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LruCache.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/insert_in_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/adding_credits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonParser.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/Member.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/lru_cache.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/WriterConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonWriter.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/Json.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/WritingBuffer.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/adding_credits.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonValue.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonNumber.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonHandler.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/InsertInList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonObject.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/WriterConfig.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LruCache.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonHandler.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/JsonWriter.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/fibonacci.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/JsonParser.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/Location.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/minimal_json/Json.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/minimal_json/Location.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/AddingCredits.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "11",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BstFromSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KthLargestElementInTwoSortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ZipList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxWaterTrappable.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ListCyclicRightShift.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BstFromPreorder.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsListPalindromic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsListCyclic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Arbitrage.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DeleteFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DescendantAndAncestorInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PivotList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxTrappedWater.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TwoSortedArraysMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DoublyListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/InsertInList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortedListsMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortedListToBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReverseSublist.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BstMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ReverseList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchFirstGreaterValueInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DoListsOverlap.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DeleteKthLastFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ListNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchInList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DoTerminatedListsOverlap.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BstToSortedList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/BstNode.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RangeLookupInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KthLargestElementInLongArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DeleteNodeFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsValidParenthesization.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KthLargestInArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EvenOddListMerge.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/KLargestValuesInBst.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "12",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestContainedInterval.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_subarray_with_sum_constraint.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestIncreasingSubarray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaximumSubarrayInCircularArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestSubarrayWithSumConstraint.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestSubarrayWithDistinctValues.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxOfSlidingWindow.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PickingUpCoins.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestContainedInterval.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PickingUpCoins.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxOfSlidingWindow.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/DefectiveJugs.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/picking_up_coins.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DefectiveJugs.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_increasing_subarray.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ZipList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_sum_subarray.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/maximum_subarray_in_circular_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_contained_interval.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestIncreasingSubarray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestSubarrayWithSumConstraint.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/maximum_subarray_in_circular_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_safe_height.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_increasing_subarray.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_subarray_with_distinct_values.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_subarray_with_distinct_values.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxSumSubarray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MaxSumSubarray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RangeLookupInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/picking_up_coins.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/defective_jugs.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_contained_interval.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_subarray_with_sum_constraint.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_sum_subarray.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "13",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxTrappedWater.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/list_cyclic_right_shift.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/do_terminated_lists_overlap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsListCyclic.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MaxWaterTrappable.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/do_terminated_lists_overlap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_list_cyclic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/is_list_cyclic.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ListCyclicRightShift.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/kth_largest_element_in_long_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KthLargestElementInTwoSortedArrays.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KthLargestInArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/delete_kth_last_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_trapped_water.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_trapped_water.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/pivot_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/kth_largest_in_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/do_lists_overlap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/pivot_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/delete_kth_last_from_list.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/KthLargestElementInLongArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/max_water_trappable.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DoListsOverlap.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/kth_largest_in_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DoTerminatedListsOverlap.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DeleteKthLastFromList.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/list_cyclic_right_shift.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/do_lists_overlap.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/kth_largest_element_in_long_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_water_trappable.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "14",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EvaluateRpn.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/timeout_exception.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/timed_executor.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/timeout_exception.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/roman_to_integer.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RomanToInteger.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TimedExecutor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/test_timer.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TimedExecutor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_first_greater_value_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RomanToInteger.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/test_timer.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/IsTreeBalanced.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sort_increasing_decreasing_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TestTimer.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/timed_executor.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/TimeoutException.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SortIncreasingDecreasingArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TimeoutException.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchFirstGreaterValueInBst.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/is_tree_balanced.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/TestTimer.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_first_greater_value_in_bst.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/NQueens.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NQueens.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/IsTreeBalanced.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EvaluateRpn.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/DescendantAndAncestorInBst.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "15",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Bonus.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/CollatzChecker.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LongestNondecreasingSubsequence.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/gcd.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/RookAttack.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/collatz_checker.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Gcd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/euclidean_gcd.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LongestNondecreasingSubsequence.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Bonus.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/EuclideanGcd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/gcd.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/rook_attack.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/CollatzChecker.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Gcd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/bonus.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/longest_nondecreasing_subsequence.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/bonus.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/collatz_checker.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/longest_nondecreasing_subsequence.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/EuclideanGcd.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/euclidean_gcd.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/RookAttack.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/rook_attack.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "16",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/majority_element.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchEntryEqualToIndex.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_entry_equal_to_index.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchMaze.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchShiftedSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchFirstKey.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchEntryEqualToIndex.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MajorityElement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchShiftedSortedArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_maze.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MajorityElement.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_entry_equal_to_index.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchMaze.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_row_col_sorted_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/spiral_ordering.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/SearchFirstKey.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_first_key.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_first_key.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_row_col_sorted_matrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchRowColSortedMatrix.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/majority_element.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "17",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/AlternatingArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/AlternatingArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/console_color.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SpiralOrdering.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/evaluate_rpn.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/insert_operators_in_string.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/alternating_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/InsertOperatorsInString.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/console_color.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/insert_operators_in_string.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/spiral_ordering.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/test_framework/ConsoleColor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/InsertOperatorsInString.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/test_framework/ConsoleColor.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/alternating_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/evaluate_rpn.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "18",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/AdvanceByOffsets.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/LargestRectangleUnderSkyline.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/largest_rectangle_under_skyline.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/AdvanceByOffsets.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/TaskPairing.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/LargestRectangleUnderSkyline.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/max_submatrix.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/advance_by_offsets.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/largest_rectangle_under_skyline.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TaskPairing.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/task_pairing.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/task_pairing.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/advance_by_offsets.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "19",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_exterior.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeExterior.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_connect_leaves.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/TreeConnectLeaves.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/tree_connect_leaves.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/number_of_score_combinations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/tree_exterior.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/SearchUnknownLengthArray.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/number_of_score_combinations.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/NumberOfScoreCombinations.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/search_unknown_length_array.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/search_unknown_length_array.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "20",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/power_x_y.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/power_set.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/matrix_connected_regions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MatrixConnectedRegions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/power_set.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/power_x_y.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PowerXY.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PowerXY.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/PowerSet.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/matrix_connected_regions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MatrixConnectedRegions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/PowerSet.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "21",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/convert_base.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/any.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/ConvertBase.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/convert_base.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/any.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/ConvertBase.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "22",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/matrix_enclosed_regions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/matrix_enclosed_regions.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/MatrixEnclosedRegions.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/MatrixEnclosedRegions.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "23",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/parity.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/parity.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java/epi/Parity.java"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_java_solutions/epi/Parity.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "24",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/look_and_say.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/int_as_array_increment.cc"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/int_as_array_increment.cc"
                }
            ]
        },
        {
            "@type": "group",
            "name": "25",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp/test_framework/json.h"
                },
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/test_framework/json.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "26",
            "nested": [
                {
                    "@type": "item",
                    "name": "epi_judge_cpp_solutions/sorted_arrays_merge.cc"
                }
            ]
        }
    ]
}