{
    "@schemaVersion": "1.0",
    "name": "clustering",
    "structure": [
        {
            "@type": "group",
            "name": "0",
            "nested": [
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/LazyPrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/main_performance.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/IndexMinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/LazyPrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/KruskalMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/MinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/UnionFind.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/UnionFind.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/MinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/IndexMinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/main_performance.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/01-Weighted-Graph/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/PrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/02-Selection-Sort-Using-Template/Student.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/KruskalMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/PrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/MinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/01-Weighted-Graph/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/LazyPrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/main_performance.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/PrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/05-Implementation-of-Optimized-Prim-Algorithm/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/06-Kruskal-Algorithm/src/bobo/algo/LazyPrimMST.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/MinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/Chapter-08-Completed-Code/src/bobo/algo/IndexMinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (Java)/03-Lazy-Prim/src/bobo/algo/Main.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "1",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/SequenceST.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-04-More-about-Binary-Search/BinarySearch.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/LinearSearch.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/04-Read-Graph/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/04-Binary-Search-Tree-Search/SequenceST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Chapter-05-Completed-Code/SequenceST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/BinarySearch.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/05-DFS-and-Components/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Chapter-05-Completed-Code/BST.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-04-More-about-Binary-Search/LinearSearch.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/02-Graph-Representation/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/01-Weighted-Graph/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/02-Graph-Representation/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/04-Read-Graph/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/01-Weighted-Graph/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/04-Binary-Search-Tree-Search/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/03-Vertex Adjacent Iterator/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/05-DFS-and-Components/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/BST.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/06-Finding-a-Path/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/03-Vertex Adjacent Iterator/DenseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/06-Finding-a-Path/SparseGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/main_dij.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/03-Vertex Adjacent Iterator/SparseGraph.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "2",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/06-Insertion-Sort-Advance/SelectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/03-Merge-Sort-Advance/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/09-Index-Heap-Advance/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/03-Selection-Sort-Generate-Test-Cases/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/07-Quick-Sort-Deal-With-Identical-Keys/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/04-Merge-Sort-Bottom-Up/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/03-Merge-Sort-Advance/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/05-Quick-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-01-Optimized-Selection-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/02-Merge-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/05-Quick-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/08-Index-Heap/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-02-Bubble-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/04-Merge-Sort-Bottom-Up/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-05-Selection/src/bobo/algo/Selection.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-1-Optimized-Shift-Up-and-Shift-Down/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-9-Indexed-Selection-Sorting/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/04-Selection-Sort-Detect-Performance/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/08-Quick-Sort-Three-Ways/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-04-Inversion-Number/TestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/06-Insertion-Sort-Advance/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-01-MergeSort-Create-aux-Array-Out-of-Merge/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-05-Selection/src/bobo/algo/TestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/02-Merge-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-2-Min-Heap/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-05-Selection/TestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-01-Merge-Sort-Create-aux-Array-Out-of-Merge/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-04-More-about-Binary-Search/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-3-Index-Min-Heap/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-03-Shell-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-02-MergeSort-and-MergeSortBU-Perfermance-Comparison/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/05-Insertion-Sort/SortTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/05-Quick-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Chapter-02-Completed-Code/SortTestHelper.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "3",
            "nested": [
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-01-Merge-Sort-Create-aux-Array-Out-of-Merge/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/MergeSortBU.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/05-Quick-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/MergeSortBU2.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/MergeSortBUO.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/08-Quick-Sort-Three-Ways/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/MergeSortBU.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-04-Inversion-Number/src/bobo/algo/InversionCount.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/MergeSortO.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/07-Quick-Sort-Deal-With-Identical-Keys/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-01-Merge-Sort-Create-aux-Array-Out-of-Merge/src/bobo/algo/MergeSort2.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/04-Merge-Sort-Bottom-Up/src/bobo/algo/MergeSortBU.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/03-Merge-Sort-Advance/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/05-Quick-Sort/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/03-Merge-Sort-Advance/src/bobo/algo/MergeSort2.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-04-Inversion-Number/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/MergeSort2.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-01-Merge-Sort-Create-aux-Array-Out-of-Merge/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/03-Merge-Sort-Advance/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/02-Merge-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/02-Merge-Sort/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/04-Merge-Sort-Bottom-Up/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/05-Quick-Sort/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/05-Quick-Sort/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/QuickSort.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "4",
            "nested": [
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Chapter-04-Completed-Code/src/bobo/algo/IndexMaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/09-Index-Heap-Advance/src/bobo/algo/IndexHeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/MaxHeapOSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/HeapSort1.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Chapter-04-Completed-Code/IndexMaxHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/09-Index-Heap-Advance/src/bobo/algo/IndexMaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/04-Shift-Down/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/03-Shift-Up/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/03-Shift-Up/src/bobo/algo/PrintableMaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/HeapSort1.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Chapter-04-Completed-Code/MaxHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/04-Shift-Down/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/08-Index-Heap/src/bobo/algo/IndexHeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Chapter-04-Completed-Code/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/HeapSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-9-Indexed-Selection-Sorting/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-3-Index-Min-Heap/src/bobo/algo/IndexMinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/Heap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/HeapSort2.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-2-Min-Heap/src/bobo/algo/MinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/MaxHeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/Heap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-3-Index-Min-Heap/src/bobo/algo/IndexMinHeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/09-Index-Heap-Advance/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/MaxHeapO.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/08-Index-Heap/src/bobo/algo/IndexMaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/03-Shift-Up/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/HeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/02-Max-Heap-Class-Basic/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Chapter-04-Completed-Code/src/bobo/algo/HeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/HeapSort2.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/02-Max-Heap-Class-Basic/src/bobo/algo/MaxHeap.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-2-Min-Heap/src/bobo/algo/MinHeapSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/08-Index-Heap/main.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "5",
            "nested": [
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/ShortestPath.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/Graph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/03-Vertex-Adjacent-Iterator/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/06-Finding-a-Path/Path.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/Component.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/02-Graph-Representation/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/ReadGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/03-Vertex-Adjacent-Iterator/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/02-Graph-Representation/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/Path.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/Components.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/ReadGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/Graph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/ReadGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/ReadGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/Path.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/Path.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/RandomGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/04-Read-Graph/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/SparseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/05-DFS-and-Components/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/ShortestPath.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/04-Read-Graph/src/bobo/algo/Graph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/05-DFS-and-Components/Components.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/04-Read-Graph/src/bobo/algo/ReadGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/04-Read-Graph/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/06-Finding-a-Path/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/Graph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/04-Read-Graph/src/bobo/algo/DenseGraph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/07-BFS-and-Shortest-Path/src/bobo/algo/Graph.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/SparseGraph.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "6",
            "nested": [
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Chapter-02-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-05-Selection/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/BubbleSort2.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/01-Selection-Sort/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/ShellSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/BubbleSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/BubbleSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/01-Selection-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Chapter-04-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/05-Insertion-Sort/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/06-Insertion-Sort-Advance/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Chapter-02-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/04-Selection-Sort-Detect-Performance/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/02-Graph-Representation/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/02-Selection-Sort-Using-Comparable/src/bobo/algo/Student.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/06-Insertion-Sort-Advance/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/main_path.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/06-Finding-a-Path/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/02-Selection-Sort-Using-Comparable/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/05-Insertion-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Chapter-02-Completed-Code/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-01-Optimized-Selection-Sort/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/04-Selection-Sort-Detect-Performance/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/02-Selection-Sort-Using-Template/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/03-Selection-Sort-Generate-Test-Cases/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/03-Selection-Sort-Generate-Test-Cases/src/bobo/algo/SelectionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-01-Optimized-Selection-Sort/src/bobo/algo/SelectionSort2.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-01-Optimized-Selection-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-01-Optimized-Selection-Sort/src/bobo/algo/Main.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "7",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/02-Binary-Search-Tree-Basics/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/06-Binary-Search-Tree-Level-Traverse/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-05-Floor-and-Ceil-in-BST/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/08-Binary-Search-Tree-Remove/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/06-Binary-Search-Tree-Level-Traverse/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/07-Binary-Search-Tree-Remove-Min-and-Max/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-06-Predecessor-and-Successor-in-BST/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/04-Binary-Search-Tree-Search/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/src/bobo/algo/SST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Chapter-05-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Chapter-05-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/07-Binary-Search-Tree-Remove-Min-and-Max/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/03-Binary-Search-Tree-Insert/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/03-Binary-Search-Tree-Insert/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/04-Binary-Search-Tree-Search/src/bobo/algo/SST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Chapter-05-Completed-Code/src/bobo/algo/SST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/05-Binary-Search-Tree-Traverse/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/05-Binary-Search-Tree-Traverse/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-06-Predecessor-and-Successor-in-BST/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-05-Floor-and-Ceil-in-BST/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/02-Binary-Search-Tree-Basics/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Chapter-05-Completed-Code/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/05-Binary-Search-Tree-Traverse/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/06-Binary-Search-Tree-Level-Traverse/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/04-Binary-Search-Tree-Search/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/08-Binary-Search-Tree-Remove/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-05-Floor-and-Ceil-in-BST/src/bobo/algo/BST.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/08-Binary-Search-Tree-Remove/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/07-Binary-Search-Tree-Remove-Min-and-Max/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-06-Predecessor-and-Successor-in-BST/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/src/bobo/algo/Main.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "8",
            "nested": [
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/05-Quick-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-01-MergeSort-Create-aux-Array-Out-of-Merge/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/04-Merge-Sort-Bottom-Up/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/06-Insertion-Sort-Advance/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/05-Insertion-Sort/SelectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-04-Inversion-Number/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/05-Insertion-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/03-Merge-Sort-Advance/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/07-Quick-Sort-Deal-With-Identical-Keys/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-01-Optimized-Selection-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/02-Merge-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-01-Merge-Sort-Create-aux-Array-Out-of-Merge/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/08-Quick-Sort-Three-Ways/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/05-Quick-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/02-Merge-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/02-Merge-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-01-Optimized-Selection-Sort/SelectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/03-Merge-Sort-Advance/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-02-MergeSort-and-MergeSortBU-Perfermance-Comparison/InsertionSort.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "9",
            "nested": [
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/IndexMinHeap.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/Dijkstra.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/DenseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/Dijkstra.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/BellmanFord.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/SparseWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/Edge.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/BellmanFord.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/01-Weighted-Graph/Edge.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/WeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/IndexMinHeap.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "10",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/02-Quick-Find/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/04-Optimize-by-Size/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-02-Path-Compression-Comparison/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-02-Path-Compression-Comparison/src/bobo/algo/UnionFind6.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/UF.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/03-Quick-Union/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFind4.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFind4.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/UnionFind4.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UF.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind4.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFind5.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/03-Quick-Union/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind6.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFind5.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-02-Path-Compression-Comparison/src/bobo/algo/UnionFind5.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind1.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/04-Optimize-by-Size/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind5.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/02-Quick-Find/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/UnionFind2.java"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/UF.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-02-Path-Compression-Comparison/src/bobo/algo/UF.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "11",
            "nested": [
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/07-Quick-Sort-Deal-With-Identical-Keys/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/04-Merge-Sort-Bottom-Up/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/QuickSort3Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/QuickSort3Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/08-Quick-Sort-Three-Ways/QuickSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/QuickSort2Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/QuickSort3Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/08-Quick-Sort-Three-Ways/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/QuickSort3Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/QuickSort2Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/QuickSort2Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/07-Quick-Sort-Deal-With-Identical-Keys/src/bobo/algo/QuickSort2Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Chapter-03-Completed-Code/src/bobo/algo/QuickSort3Ways.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/QuickSort2Ways.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/QuickSort3Ways.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/QuickSort3Ways.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/08-Quick-Sort-Three-Ways/src/bobo/algo/QuickSort3Ways.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/QuickSort3Ways.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "12",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/04-Optimize-by-Size/src/bobo/algo/UnionFind3.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/UnionFind3.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/04-Optimize-by-Size/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/02-Quick-Find/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Chapter-06-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/02-Quick-Find/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/Pair.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/03-Quick-Union/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/UnionFind3.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/03-Quick-Union/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/04-Optimize-by-Size/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/Optional-01-Same-Cases-Test-for-UF/src/bobo/algo/UnionFind3.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/06-Path-Compression/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/UnionFindTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (Java)/05-Optimize-by-Rank/src/bobo/algo/UnionFind3.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "13",
            "nested": [
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/05-DFS-and-Components/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/04-Read-Graph/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/main_component2.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/04-Read-Graph/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/01-Weighted-Graph/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/05-DFS-and-Components/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/Component.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/main_component.cpp"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/06-Finding-a-Path/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/RandomGraph.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/ReadGraph.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/ReadGraph.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "14",
            "nested": [
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/QuickSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/MergeSortO.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/04-Merge-Sort-Bottom-Up/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/03-Merge-Sort-Advance/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-01-MergeSort-Create-aux-Array-Out-of-Merge/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/MergeSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/MergeSortBU.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/03-Merge-Sort-Advance/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/04-Merge-Sort-Bottom-Up/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/04-Merge-Sort-Bottom-Up/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-01-MergeSort-Create-aux-Array-Out-of-Merge/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-01-MergeSort-Create-aux-Array-Out-of-Merge/MergeSort2.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/MergeSortBUO.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-02-MergeSort-and-MergeSortBU-Perfermance-Comparison/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-02-MergeSort-and-MergeSortBU-Perfermance-Comparison/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Chapter-03-Completed-Code/MergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/MergeSort.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "15",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Inorder/src/Solution2.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Inorder/src/TreeNode.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/src/Solution1.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution3.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution2.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution1.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/src/TreeNode.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution6.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-10-Binary-Tree-Morris-Traversal/src/PostorderSolution.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-10-Binary-Tree-Morris-Traversal/src/PreorderSolution.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Inorder/src/Solution1.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/src/Solution2.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution5.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-10-Binary-Tree-Morris-Traversal/src/TreeNode.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-10-Binary-Tree-Morris-Traversal/src/InorderSolution.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/src/Solution3.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/Solution4.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/src/TreeNode.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "16",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-02-Path-Compression-Comparison/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/03-Quick-Union/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind4.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind5.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind6.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/UnionFind3.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/UnionFind4.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFind3.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/03-Quick-Union/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-02-Path-Compression-Comparison/UnionFind5.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/UnionFind3.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-02-Path-Compression-Comparison/UnionFind6.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "17",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/03-Quick-Union/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Optional-01-Same-Cases-Test-for-UF/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/05-Optimize-by-Rank/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/02-Quick-Find/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/02-Quick-Find/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/UnionFindTestHelper.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/03-Quick-Union/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/main2.cpp"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/04-Optimize-by-Size/main.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "18",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Inorder/main1.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/main2.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main5.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-10-Binary-Tree-Morris-Traversal/inorder.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/main3.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-10-Binary-Tree-Morris-Traversal/preorder.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main6.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main3.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main2.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main1.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Postorder/main4.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Inorder/main2.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal/Preorder/main1.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-10-Binary-Tree-Morris-Traversal/postorder.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "19",
            "nested": [
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/MinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/MinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-2-Min-Heap/MinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-2-Min-Heap/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-3-Index-Min-Heap/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/MinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/MinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/IndexMinHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-3-Index-Min-Heap/main.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "20",
            "nested": [
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/PrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/KruskalMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/KruskalMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/LazyPrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/LazyPrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/PrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/06-Kruskal-Algorithm/LazyPrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/05-Implementation-of-Optimized-Prim-Algorithm/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/03-Lazy-Prim/LazyPrimMST.h"
                },
                {
                    "@type": "item",
                    "name": "08-Minimum-Span-Trees/Course Code (C++)/Chapter-08-Completed-Code/PrimMST.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "21",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/01-Binary-Search/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Optional-02-Floor-and-Ceil-in-Binary-Search/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-02-Floor-and-Ceil-in-Binary-Search/src/bobo/algo/BinarySearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-04-More-about-Binary-Search/src/LinearSearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/01-Binary-Search/src/bobo/algo/BinarySearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/src/BinarySearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/01-Binary-Search/src/bobo/algo/BinarySearch2.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/01-Binary-Search/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-04-More-about-Binary-Search/src/Main.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-04-More-about-Binary-Search/src/BinarySearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/src/LinearSearch.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Optional-03-Lower-Bound-and-Upper-Bound-in-Binary-Search/src/Main.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "22",
            "nested": [
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-03-Shell-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-02-Bubble-Sort/SelectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-03-Shell-Sort/BubbleSort.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-02-Bubble-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-03-Shell-Sort/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (Java)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison/src/bobo/algo/ShellSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-02-Bubble-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Optional-03-Shell-Sort/SelectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/ShellSort.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "23",
            "nested": [
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/QuickSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/Optional-03-ShellSort-MergeSort-and-QuickSort-Comparision/QuickSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/05-Heapify/QuickSort.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/06-Heap-Sort/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/QuickSort.java"
                },
                {
                    "@type": "item",
                    "name": "03-Sorting-Advance/Course Code (C++)/06-Quick-Sort-Deal-With-Nearly-Ordered-Array/main.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "24",
            "nested": [
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Chapter-02-Completed-Code/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-01-Optimized-Selection-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/06-Insertion-Sort-Advance/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/04-Selection-Sort-Detect-Performance/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/03-Selection-Sort-Generate-Test-Cases/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/05-Insertion-Sort/src/bobo/algo/SortTestHelper.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "25",
            "nested": [
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/05-Heapify/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-2-Min-Heap/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/09-Index-Heap-Advance/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Chapter-04-Completed-Code/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-1-Optimized-Shift-Up-and-Shift-Down/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/06-Heap-Sort/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/Optional-3-Index-Min-Heap/src/bobo/algo/SortTestHelper.java"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (Java)/08-Index-Heap/src/bobo/algo/SortTestHelper.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "26",
            "nested": [
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/ShortestPath.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/Path.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/03-Implementation-of-Dijkstra/Dijkstra.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/Chapter-07-Completed-Code/Path.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/Dijkstra.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Optional-1-Dijkstra-based-on-Min-Heap/Dijkstra.h"
                },
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (C++)/07-BFS-and-Shortest-Path/ShortestPath.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "27",
            "nested": [
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-03-Shell-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/06-Insertion-Sort-Advance/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Chapter-02-Completed-Code/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/05-Insertion-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-02-Bubble-Sort/src/bobo/algo/InsertionSort.java"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (Java)/Optional-01-Optimized-Selection-Sort/src/bobo/algo/InsertionSort.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "28",
            "nested": [
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/04-Binary-Search-Tree-Search/src/bobo/algo/FileOperations.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/src/bobo/algo/FileOperations.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (Java)/Chapter-05-Completed-Code/src/bobo/algo/FileOperations.java"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/10-The-Disadvantages-of-Binary-Search-Tree-and-More-Trees/FileOps.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/04-Binary-Search-Tree-Search/FileOps.h"
                },
                {
                    "@type": "item",
                    "name": "05-Binary-Search-Tree/Course Code (C++)/Chapter-05-Completed-Code/FileOps.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "29",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFind4.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFind5.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/Chapter-06-Completed-Code/UnionFind3.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "30",
            "nested": [
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFind3.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFind2.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFind1.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFind4.h"
                },
                {
                    "@type": "item",
                    "name": "06-Union-Find/Course Code (C++)/06-Path-Compression/UnionFind5.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "31",
            "nested": [
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/05-Implementation-of-Bellman-Ford/BellmanFord.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/BellmanFord.h"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (C++)/Chapter-09-Completed-Code/main_bellmanford.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "32",
            "nested": [
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/03-Implementation-of-Dijkstra/src/bobo/algo/ReadWeightedGraph.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/05-Implementation-of-Bellman-Ford/src/bobo/algo/ReadWeightedGraph.java"
                }
            ]
        },
        {
            "@type": "group",
            "name": "33",
            "nested": [
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Chapter-04-Completed-Code/HeapSort.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Chapter-02-Completed-Code/InsertionSort.h"
                },
                {
                    "@type": "item",
                    "name": "02-Sorting-Basic/Course Code (C++)/Chapter-02-Completed-Code/SelectionSort.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "34",
            "nested": [
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-1-Optimized-Shift-Up-and-Shift-Down/main.cpp"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-1-Optimized-Shift-Up-and-Shift-Down/MaxHeap.h"
                },
                {
                    "@type": "item",
                    "name": "04-Heap/Course Code (C++)/Optional-1-Optimized-Shift-Up-and-Shift-Down/MaxHeapO.h"
                }
            ]
        },
        {
            "@type": "group",
            "name": "35",
            "nested": [
                {
                    "@type": "item",
                    "name": "07-Graph-Basics/Course Code (Java)/Chapter-07-Completed-Code/src/bobo/algo/Main.java"
                },
                {
                    "@type": "item",
                    "name": "09-Shortest-Path/Course Code (Java)/Chapter-09-Completed-Code/src/bobo/algo/Main.java"
                }
            ]
        }
    ]
}