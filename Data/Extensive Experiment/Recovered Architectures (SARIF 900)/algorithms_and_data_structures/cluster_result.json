{
    "@schemaVersion": "1.0",
    "name": "clustering",
    "structure": [
        {
            "@type": "group",
            "name": "0",
            "nested": [
                {
                    "@type": "item",
                    "name": "tree_problems/levelOrderTraversalIterative.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/zigZagTraversal.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/levelOrderTraversalRecursive.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/lowest-common-ancestor.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/sortedArrayToBST.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/k_sum_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/fibonacci.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/printAllRootToLeafPath.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/verticalSum.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/string_from_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/validate_bst.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/lowest-common-ancestor-binary-tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/reverseLevelOrderTraversal.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/kth_smallest.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/predecessorSuccessor.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/merge_trees.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/closest_bst_value.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/convert_to_sum_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/sumTree.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/node_ancestors_in_root_path.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/invert_a_tree.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/level_of_node.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/find_target_k.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "1",
            "nested": [
                {
                    "@type": "item",
                    "name": "sort_search_problems/closestPairSorted.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/array_rotation.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/find_min_rotated.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testClosestPair.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/rotate_matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/find_pairs_with_sum.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/check_opposite_signs.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/findClosestPairToZero.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/findMaximum.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/find_odd_one_out.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/closest_nums.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/threeSumClosest.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/bfsDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/combinationSum3.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/swapSetOfBits.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/minLengthUnsortedArray.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/graph.h"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/addDigits.cpp"
                },
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/catalan_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/dfsDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/peak_element.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "2",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/mergeLists.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/queue.h"
                },
                {
                    "@type": "item",
                    "name": "include/quickSort.h"
                },
                {
                    "@type": "item",
                    "name": "include/generic.h"
                },
                {
                    "@type": "item",
                    "name": "include/mergeSort.h"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/quickSortDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/SleepSort.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/bubbleSortDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "stack_problems/stackDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/heap_sort.h"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/heapSort.cpp"
                },
                {
                    "@type": "item",
                    "name": "queue_problems/queueDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/selectionSort.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/bubbleSort.h"
                },
                {
                    "@type": "item",
                    "name": "include/selectionSort.h"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/mergeSortDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/heapSortDemo.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "3",
            "nested": [
                {
                    "@type": "item",
                    "name": "math_problems/phone_digits.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/maxProfitStock.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/squareSum.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/sumRootToLeafNumbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/longestConsecutiveSeq.cpp"
                },
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/lcs.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testFixPoint.cpp"
                },
                {
                    "@type": "item",
                    "name": "stack_problems/infix_to_postfix.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/grid_word_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/fixedPoint.cpp"
                },
                {
                    "@type": "item",
                    "name": "backtracking_problems/word_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/minPath.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/count_islands.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/stack.h"
                },
                {
                    "@type": "item",
                    "name": "stack_problems/stock_span_problem.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/maxArea.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/best_time_to_buy_sell.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "4",
            "nested": [
                {
                    "@type": "item",
                    "name": "linked_list_problems/listPallindrome.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/swapNodesWithoutSwappingData.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/rearrange_list.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/findIntersectionPointOfLists.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/deleteNode.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/reverseAlternateNodes.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/floyedCycleDetection.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/merge_sort.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/insertInASortedLinkedList.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/removeDuplicatesFromSortedList.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/nthToLastNode.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/add_two_numbers_lists.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/cloneListWithRandomPtr.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/reverseLinkedListIterAndRecurse.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/deleteLinkedlist.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/printMiddleNode.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "5",
            "nested": [
                {
                    "@type": "item",
                    "name": "include/double_linked_list.h"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/containsDuplicate.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/jumpGame.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/first_occurrence_binary_search.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/missing_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/binarySearchTree.h"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/addBin.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/missingNumber2.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/smallest_missing.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/impl/binarySearchTree.impl.h"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/n_binary.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/summary_ranges.cpp"
                },
                {
                    "@type": "item",
                    "name": "tree_problems/binarySearchTreeDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/missingNumbers.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/firstMissingPositiveNum.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "6",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/product_except_self.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/commonIn3Arrays.cpp"
                },
                {
                    "@type": "item",
                    "name": "linked_list_problems/listDemo.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/remove_duplicates.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-6-palindrome.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/remove_element.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-8-zero-matrix.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/search2DII.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-7-matrix-rotation.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/firstRepeatingElement.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/matrix_spiral_print.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/move_zeros.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/intersection_of_array.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/moveZeroes.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "7",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/reverse_vowels.cpp"
                },
                {
                    "@type": "item",
                    "name": "math_problems/factorial_of_large_num.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/reverseBitsOfAnInteger.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/next_power_of_2.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/countNumberOfBitFlips.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/check_if_power_of_4.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/hamming_distance.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/find_parity.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/multiply_by_7.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/power_of_2.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/swapBits.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/right_most_set_bit.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/addition_without_operators.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "8",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/shortest_path_maze.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-1-hasUniqueChars.cpp"
                },
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/unique_paths.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-5-one-edit-away.cpp"
                },
                {
                    "@type": "item",
                    "name": "string_problems/find_difference.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testClosestZero.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/flood_fill.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testBubble.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testClosestNums.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testCommon.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/list.h"
                },
                {
                    "@type": "item",
                    "name": "string_problems/z.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "9",
            "nested": [
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-3-URLify.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-3-edi5-removeDuplicates.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-2-edi5-reverseString.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/multiple_of_3.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testFRE.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testFindMax.cpp"
                },
                {
                    "@type": "item",
                    "name": "math_problems/happy_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "sort_search_problems/testFOBS.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-2-perm-strings.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/first_non_repeating_int.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "10",
            "nested": [
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-2-kthToLast.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-3-delete-middle-node.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-7-intersection.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-1-remove-dups.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-5-add-lists.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-8-loop-detection.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/2-4-partition.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/rotateList.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/connectNextPointers.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "11",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/sortCharByFrequency.cpp"
                },
                {
                    "@type": "item",
                    "name": "greedy_problems/huffman_coding.cpp"
                },
                {
                    "@type": "item",
                    "name": "string_problems/robinKarpStringMatching.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/power_function.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/remove_invalid_parenthesis.cpp"
                },
                {
                    "@type": "item",
                    "name": "stack_problems/valid_parenthesis.cpp"
                },
                {
                    "@type": "item",
                    "name": "math_problems/pow.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/generate_parenthesis.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-6-string-compression.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "12",
            "nested": [
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/findDigits.cpp"
                },
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-9-string-rotation.cpp"
                },
                {
                    "@type": "item",
                    "name": "greedy_problems/orders_order.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/median_stream.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/save_quantamland.cpp"
                },
                {
                    "@type": "item",
                    "name": "greedy_problems/two_arrays.cpp"
                },
                {
                    "@type": "item",
                    "name": "bit_manipulation/integerOverflow.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/dijkstra-shortest-reach.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "13",
            "nested": [
                {
                    "@type": "item",
                    "name": "math_problems/lowest_possible_number.cpp"
                },
                {
                    "@type": "item",
                    "name": "string_problems/next_permutation.cpp"
                },
                {
                    "@type": "item",
                    "name": "string_problems/length_of_last_word.cpp"
                },
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/caeser_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/reverse_words.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/word_pattern.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "14",
            "nested": [
                {
                    "@type": "item",
                    "name": "string_problems/pstring_test.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/countPrimes.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/pUnitTest.h"
                },
                {
                    "@type": "item",
                    "name": "include/pUnitTest.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/pstring.h"
                },
                {
                    "@type": "item",
                    "name": "include/pstring.cpp"
                },
                {
                    "@type": "item",
                    "name": "include/catch.hpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "15",
            "nested": [
                {
                    "@type": "item",
                    "name": "graph_problems/kruskalMST.cpp"
                },
                {
                    "@type": "item",
                    "name": "leet_code_problems/editDistance.cpp"
                },
                {
                    "@type": "item",
                    "name": "graph_problems/primsMST.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "16",
            "nested": [
                {
                    "@type": "item",
                    "name": "bit_manipulation/counter_game.cpp"
                },
                {
                    "@type": "item",
                    "name": "backtracking_problems/dialpad_combinations.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "17",
            "nested": [
                {
                    "@type": "item",
                    "name": "common_ds_algo_problems/vigenere_cipher.cpp"
                },
                {
                    "@type": "item",
                    "name": "math_problems/gcd.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "18",
            "nested": [
                {
                    "@type": "item",
                    "name": "cracking_the_coding_interview_problems/1-4-pallindrome-permutations.cpp"
                },
                {
                    "@type": "item",
                    "name": "math_problems/string_permutations.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "19",
            "nested": [
                {
                    "@type": "item",
                    "name": "backtracking_problems/wild_card_matching.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "20",
            "nested": [
                {
                    "@type": "item",
                    "name": "bit_manipulation/reverseEndianness.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "21",
            "nested": [
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/0_1_knapsack_problem.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "22",
            "nested": [
                {
                    "@type": "item",
                    "name": "dynamic_programming_problems/max_subsequence.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "23",
            "nested": [
                {
                    "@type": "item",
                    "name": "leet_code_problems/excelColSheetTitle.cpp"
                }
            ]
        },
        {
            "@type": "group",
            "name": "24",
            "nested": [
                {
                    "@type": "item",
                    "name": "tree_problems/floor_ceil_bst.cpp"
                }
            ]
        }
    ]
}