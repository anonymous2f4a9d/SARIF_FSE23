# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import(
    "//foundation/distributedhardware/distributedcamera/distributedcamera.gni")

ohos_shared_library("distributed_camera_handler") {
  include_dirs = [
    "//third_party/jsoncpp/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "${graphicstandard_path}/frameworks/surface/include",
    "${camerastandard_path}/frameworks/native/metadata/include",
    "${camerastandard_path}/interfaces/inner_api/native/camera/include",
    "${camerastandard_path}/interfaces/inner_api/native/camera/include/input",
    "${camerastandard_path}/interfaces/inner_api/native/camera/include/output",
    "${camerastandard_path}/interfaces/inner_api/native/camera/include/session",
    "${camerastandard_path}/services/camera_service/binder/base/include",
    "${camerastandard_path}/services/camera_service/binder/client/include",
    "${camerastandard_path}/services/camera_service/binder/server/include",
    "${camerastandard_path}/services/camera_service/include",
    "${mediastandard_path}/interfaces/innerkits/native/media/include",
    "${fwk_common_path}/log/include",
    "${fwk_common_path}/utils/include",
    "${fwk_utils_path}/include/log",
    "${fwk_utils_path}/include",
  ]

  include_dirs += [
    "include",
    "${common_path}/include/constants",
    "${common_path}/include/utils",
    "${distributedcamera_hdf_path}/interfaces/include",
    "${services_path}/cameraservice/cameraoperator/client/include/callback",
  ]

  sources = [ "${services_path}/cameraservice/cameraoperator/client/src/callback/dcamera_manager_callback.cpp" ]

  if (device_name == "baltimore") {
    sources += [ "src/dcamera_handler.cpp" ]
  } else {
    sources += [ "src/dcamera_handler_common.cpp" ]
  }

  deps = [
    "${camerastandard_path}/frameworks/native/camera:camera_framework",
    "${camerastandard_path}/frameworks/native/metadata:metadata",
    "${common_path}:distributed_camera_utils",
    "${fwk_utils_path}:distributedhardwareutils",
    "${graphicstandard_path}:libsurface",
    "//third_party/jsoncpp:jsoncpp",
    "//utils/native/base:utils",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"dcamerahandler\"",
    "LOG_DOMAIN=0xD004100",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "multimedia_media_standard:media_client",
  ]

  subsystem_name = "distributedhardware"

  part_name = "distributed_camera"
}
